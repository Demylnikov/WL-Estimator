{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Router from '../../modules/router/router';\nimport Framework7Class from '../../utils/class';\n\nvar View =\n/*#__PURE__*/\nfunction (_Framework7Class) {\n  _inherits(View, _Framework7Class);\n\n  function View(appInstance, el) {\n    var _this;\n\n    var viewParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(View).call(this, viewParams, [appInstance]));\n    var app = appInstance;\n    var $el = $(el);\n\n    var view = _assertThisInitialized(_assertThisInitialized(_this));\n\n    var defaults = {\n      routes: [],\n      routesAdd: []\n    }; // Default View params\n\n    view.params = Utils.extend(defaults, app.params.view, viewParams); // Routes\n\n    if (view.params.routes.length > 0) {\n      view.routes = view.params.routes;\n    } else {\n      view.routes = [].concat(app.routes, view.params.routesAdd);\n    } // Selector\n\n\n    var selector;\n    if (typeof el === 'string') selector = el;else {\n      // Supposed to be HTMLElement or Dom7\n      selector = ($el.attr('id') ? \"#\".concat($el.attr('id')) : '') + ($el.attr('class') ? \".\".concat($el.attr('class').replace(/ /g, '.').replace('.active', '')) : '');\n    } // DynamicNavbar\n\n    var $navbarEl;\n\n    if (app.theme === 'ios' && view.params.iosDynamicNavbar && view.params.iosSeparateDynamicNavbar) {\n      $navbarEl = $el.children('.navbar').eq(0);\n\n      if ($navbarEl.length === 0) {\n        $navbarEl = $('<div class=\"navbar\"></div>');\n      }\n    } // View Props\n\n\n    Utils.extend(false, view, {\n      app: app,\n      $el: $el,\n      el: $el[0],\n      name: view.params.name,\n      main: view.params.main || $el.hasClass('view-main'),\n      $navbarEl: $navbarEl,\n      navbarEl: $navbarEl ? $navbarEl[0] : undefined,\n      selector: selector,\n      history: [],\n      scrollHistory: {}\n    }); // Save in DOM\n\n    $el[0].f7View = view; // Install Modules\n\n    view.useModules(); // Add to app\n\n    app.views.push(view);\n\n    if (view.main) {\n      app.views.main = view;\n    }\n\n    if (view.name) {\n      app.views[view.name] = view;\n    } // Index\n\n\n    view.index = app.views.indexOf(view); // View ID\n\n    var viewId;\n\n    if (view.name) {\n      viewId = \"view_\".concat(view.name);\n    } else if (view.main) {\n      viewId = 'view_main';\n    } else {\n      viewId = \"view_\".concat(view.index);\n    }\n\n    view.id = viewId; // Init View\n\n    if (app.initialized) {\n      view.init();\n    } else {\n      app.on('init', function () {\n        view.init();\n      });\n    }\n\n    return _possibleConstructorReturn(_this, view);\n  }\n\n  _createClass(View, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var view = this;\n      var app = view.app;\n      view.$el.trigger('view:beforedestroy', view);\n      view.emit('local::beforeDestroy viewBeforeDestroy', view);\n      app.off('resize', view.checkmasterDetailBreakpoint);\n\n      if (view.main) {\n        app.views.main = null;\n        delete app.views.main;\n      } else if (view.name) {\n        app.views[view.name] = null;\n        delete app.views[view.name];\n      }\n\n      view.$el[0].f7View = null;\n      delete view.$el[0].f7View;\n      app.views.splice(app.views.indexOf(view), 1); // Destroy Router\n\n      if (view.params.router && view.router) {\n        view.router.destroy();\n      }\n\n      view.emit('local::destroy viewDestroy', view); // Delete props & methods\n\n      Object.keys(view).forEach(function (viewProp) {\n        view[viewProp] = null;\n        delete view[viewProp];\n      });\n      view = null;\n    }\n  }, {\n    key: \"checkmasterDetailBreakpoint\",\n    value: function checkmasterDetailBreakpoint() {\n      var view = this;\n      var app = view.app;\n      var wasMasterDetail = view.$el.hasClass('view-master-detail');\n\n      if (app.width >= view.params.masterDetailBreakpoint) {\n        view.$el.addClass('view-master-detail');\n\n        if (!wasMasterDetail) {\n          view.emit('local::masterDetailBreakpoint viewMasterDetailBreakpoint');\n          view.$el.trigger('view:masterDetailBreakpoint', view);\n        }\n      } else {\n        view.$el.removeClass('view-master-detail');\n\n        if (wasMasterDetail) {\n          view.emit('local::masterDetailBreakpoint viewMasterDetailBreakpoint');\n          view.$el.trigger('view:masterDetailBreakpoint', view);\n        }\n      }\n    }\n  }, {\n    key: \"initMasterDetail\",\n    value: function initMasterDetail() {\n      var view = this;\n      var app = view.app;\n      view.checkmasterDetailBreakpoint = view.checkmasterDetailBreakpoint.bind(view);\n      view.checkmasterDetailBreakpoint();\n      app.on('resize', view.checkmasterDetailBreakpoint);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var view = this;\n\n      if (view.params.router) {\n        if (view.params.masterDetailBreakpoint > 0) {\n          view.initMasterDetail();\n        }\n\n        view.router.init();\n        view.$el.trigger('view:init', view);\n        view.emit('local::init viewInit', view);\n      }\n    }\n  }]);\n\n  return View;\n}(Framework7Class); // Use Router\n\n\nView.use(Router);\nexport default View;","map":null,"metadata":{},"sourceType":"module"}
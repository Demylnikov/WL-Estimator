{"ast":null,"code":"import _construct from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/construct\";\nimport $ from 'dom7';\nexport default function () {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultSelector = parameters.defaultSelector,\n      constructor = parameters.constructor,\n      domProp = parameters.domProp,\n      app = parameters.app,\n      addMethods = parameters.addMethods;\n  var methods = {\n    create: function create() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (app) return _construct(constructor, [app].concat(args));\n      return _construct(constructor, args);\n    },\n    get: function get() {\n      var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSelector;\n      if (el instanceof constructor) return el;\n      var $el = $(el);\n      if ($el.length === 0) return undefined;\n      return $el[0][domProp];\n    },\n    destroy: function destroy(el) {\n      var instance = methods.get(el);\n      if (instance && instance.destroy) return instance.destroy();\n      return undefined;\n    }\n  };\n\n  if (addMethods && Array.isArray(addMethods)) {\n    addMethods.forEach(function (methodName) {\n      methods[methodName] = function () {\n        var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSelector;\n        var instance = methods.get(el);\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        if (instance && instance[methodName]) return instance[methodName].apply(instance, args);\n        return undefined;\n      };\n    });\n  }\n\n  return methods;\n}","map":null,"metadata":{},"sourceType":"module"}
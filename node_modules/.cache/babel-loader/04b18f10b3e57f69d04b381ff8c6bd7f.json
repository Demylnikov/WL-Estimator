{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Framework7Class from '../../utils/class';\n\nvar SmartSelect =\n/*#__PURE__*/\nfunction (_Framework7Class) {\n  _inherits(SmartSelect, _Framework7Class);\n\n  function SmartSelect(app) {\n    var _this;\n\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, SmartSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SmartSelect).call(this, params, [app]));\n\n    var ss = _assertThisInitialized(_assertThisInitialized(_this));\n\n    var defaults = Utils.extend({\n      on: {}\n    }, app.params.smartSelect); // Extend defaults with modules params\n\n    ss.useModulesParams(defaults);\n    ss.params = Utils.extend({}, defaults, params);\n    ss.app = app;\n    var $el = $(ss.params.el).eq(0);\n    if ($el.length === 0) return _possibleConstructorReturn(_this, ss);\n    if ($el[0].f7SmartSelect) return _possibleConstructorReturn(_this, $el[0].f7SmartSelect);\n    var $selectEl = $el.find('select').eq(0);\n    if ($selectEl.length === 0) return _possibleConstructorReturn(_this, ss);\n    var $valueEl = $(ss.params.valueEl);\n\n    if ($valueEl.length === 0) {\n      $valueEl = $el.find('.item-after');\n    }\n\n    if ($valueEl.length === 0) {\n      $valueEl = $('<div class=\"item-after\"></div>');\n      $valueEl.insertAfter($el.find('.item-title'));\n    } // View\n\n\n    var view; // Url\n\n    var url = params.url;\n\n    if (!url) {\n      if ($el.attr('href') && $el.attr('href') !== '#') url = $el.attr('href');else if ($selectEl.attr('name')) url = \"\".concat($selectEl.attr('name').toLowerCase(), \"-select/\");\n    }\n\n    if (!url) url = ss.params.url;\n    var multiple = $selectEl[0].multiple;\n    var inputType = multiple ? 'checkbox' : 'radio';\n    var id = Utils.id();\n    Utils.extend(ss, {\n      $el: $el,\n      el: $el[0],\n      $selectEl: $selectEl,\n      selectEl: $selectEl[0],\n      $valueEl: $valueEl,\n      valueEl: $valueEl[0],\n      url: url,\n      multiple: multiple,\n      inputType: inputType,\n      id: id,\n      view: view,\n      inputName: \"\".concat(inputType, \"-\").concat(id),\n      selectName: $selectEl.attr('name'),\n      maxLength: $selectEl.attr('maxlength') || params.maxLength\n    });\n    $el[0].f7SmartSelect = ss; // Events\n\n    function onClick() {\n      ss.open();\n    }\n\n    function onChange() {\n      var value = ss.$selectEl.val();\n      ss.$el.trigger('smartselect:change', ss, value);\n      ss.emit('local::change smartSelectChange', ss, value);\n      ss.setTextValue();\n    }\n\n    ss.attachEvents = function attachEvents() {\n      $el.on('click', onClick);\n      $el.on('change', 'select', onChange);\n    };\n\n    ss.detachEvents = function detachEvents() {\n      $el.off('click', onClick);\n      $el.off('change', 'select', onChange);\n    };\n\n    function handleInputChange() {\n      var optionEl;\n      var text;\n      var inputEl = this;\n      var value = inputEl.value;\n      var optionText = [];\n      var displayAs;\n\n      if (inputEl.type === 'checkbox') {\n        for (var i = 0; i < ss.selectEl.options.length; i += 1) {\n          optionEl = ss.selectEl.options[i];\n\n          if (optionEl.value === value) {\n            optionEl.selected = inputEl.checked;\n          }\n\n          if (optionEl.selected) {\n            displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-value-as');\n            text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n            optionText.push(text.trim());\n          }\n        }\n\n        if (ss.maxLength) {\n          ss.checkMaxLength();\n        }\n      } else {\n        optionEl = ss.$selectEl.find(\"option[value=\\\"\".concat(value, \"\\\"]\"))[0];\n        displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-as');\n        text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n        optionText = [text];\n        ss.selectEl.value = value;\n      }\n\n      ss.$selectEl.trigger('change');\n      ss.$valueEl.text(optionText.join(', '));\n\n      if (ss.params.closeOnSelect && ss.inputType === 'radio') {\n        ss.close();\n      }\n    }\n\n    ss.attachInputsEvents = function attachInputsEvents() {\n      ss.$containerEl.on('change', 'input[type=\"checkbox\"], input[type=\"radio\"]', handleInputChange);\n    };\n\n    ss.detachInputsEvents = function detachInputsEvents() {\n      ss.$containerEl.off('change', 'input[type=\"checkbox\"], input[type=\"radio\"]', handleInputChange);\n    }; // Install Modules\n\n\n    ss.useModules(); // Init\n\n    ss.init();\n    return _possibleConstructorReturn(_this, ss);\n  }\n\n  _createClass(SmartSelect, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      var ss = this;\n      var newValue = value;\n      var optionText = [];\n      var optionEl;\n      var displayAs;\n      var text;\n\n      if (ss.multiple) {\n        if (!Array.isArray(newValue)) newValue = [newValue];\n\n        for (var i = 0; i < ss.selectEl.options.length; i += 1) {\n          optionEl = ss.selectEl.options[i];\n\n          if (newValue.indexOf(optionEl.value) >= 0) {\n            optionEl.selected = true;\n          } else {\n            optionEl.selected = false;\n          }\n\n          if (optionEl.selected) {\n            displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-value-as');\n            text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n            optionText.push(text.trim());\n          }\n        }\n      } else {\n        optionEl = ss.$selectEl.find(\"option[value=\\\"\".concat(newValue, \"\\\"]\"))[0];\n        displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-as');\n        text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n        optionText = [text];\n        ss.selectEl.value = newValue;\n      }\n\n      ss.$valueEl.text(optionText.join(', '));\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var ss = this;\n      return ss.$selectEl.val();\n    }\n  }, {\n    key: \"getView\",\n    value: function getView() {\n      var ss = this;\n      var view = ss.view || ss.params.view;\n\n      if (!view) {\n        view = ss.$el.parents('.view').length && ss.$el.parents('.view')[0].f7View;\n      }\n\n      if (!view) {\n        throw Error('Smart Select requires initialized View');\n      }\n\n      ss.view = view;\n      return view;\n    }\n  }, {\n    key: \"checkMaxLength\",\n    value: function checkMaxLength() {\n      var ss = this;\n      var $containerEl = ss.$containerEl;\n\n      if (ss.selectEl.selectedOptions.length >= ss.maxLength) {\n        $containerEl.find('input[type=\"checkbox\"]').each(function (index, inputEl) {\n          if (!inputEl.checked) {\n            $(inputEl).parents('li').addClass('disabled');\n          } else {\n            $(inputEl).parents('li').removeClass('disabled');\n          }\n        });\n      } else {\n        $containerEl.find('.disabled').removeClass('disabled');\n      }\n    }\n  }, {\n    key: \"setTextValue\",\n    value: function setTextValue(value) {\n      var ss = this;\n      var valueArray = [];\n\n      if (typeof value !== 'undefined') {\n        if (Array.isArray(value)) {\n          valueArray = value;\n        } else {\n          valueArray = [value];\n        }\n      } else {\n        ss.$selectEl.find('option').each(function (optionIndex, optionEl) {\n          var $optionEl = $(optionEl);\n\n          if (optionEl.selected) {\n            var displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $optionEl.data('display-value-as');\n\n            if (displayAs && typeof displayAs !== 'undefined') {\n              valueArray.push(displayAs);\n            } else {\n              valueArray.push(optionEl.textContent.trim());\n            }\n          }\n        });\n      }\n\n      ss.$valueEl.text(valueArray.join(', '));\n    }\n  }, {\n    key: \"getItemsData\",\n    value: function getItemsData() {\n      var ss = this;\n      var items = [];\n      var previousGroupEl;\n      ss.$selectEl.find('option').each(function (index, optionEl) {\n        var $optionEl = $(optionEl);\n        var optionData = $optionEl.dataset();\n        var optionImage = optionData.optionImage || ss.params.optionImage;\n        var optionIcon = optionData.optionIcon || ss.params.optionIcon;\n        var optionHasMedia = optionImage || optionIcon; // if (material) optionHasMedia = optionImage || optionIcon;\n\n        var optionColor = optionData.optionColor;\n        var optionClassName = optionData.optionClass || '';\n        if ($optionEl[0].disabled) optionClassName += ' disabled';\n        var optionGroupEl = $optionEl.parent('optgroup')[0];\n        var optionGroupLabel = optionGroupEl && optionGroupEl.label;\n        var optionIsLabel = false;\n\n        if (optionGroupEl && optionGroupEl !== previousGroupEl) {\n          optionIsLabel = true;\n          previousGroupEl = optionGroupEl;\n          items.push({\n            groupLabel: optionGroupLabel,\n            isLabel: optionIsLabel\n          });\n        }\n\n        items.push({\n          value: $optionEl[0].value,\n          text: $optionEl[0].textContent.trim(),\n          selected: $optionEl[0].selected,\n          groupEl: optionGroupEl,\n          groupLabel: optionGroupLabel,\n          image: optionImage,\n          icon: optionIcon,\n          color: optionColor,\n          className: optionClassName,\n          disabled: $optionEl[0].disabled,\n          id: ss.id,\n          hasMedia: optionHasMedia,\n          checkbox: ss.inputType === 'checkbox',\n          radio: ss.inputType === 'radio',\n          inputName: ss.inputName,\n          inputType: ss.inputType\n        });\n      });\n      ss.items = items;\n      return items;\n    }\n  }, {\n    key: \"renderSearchbar\",\n    value: function renderSearchbar() {\n      var ss = this;\n      if (ss.params.renderSearchbar) return ss.params.renderSearchbar.call(ss);\n      var searchbarHTML = \"\\n      <form class=\\\"searchbar\\\">\\n        <div class=\\\"searchbar-inner\\\">\\n          <div class=\\\"searchbar-input-wrap\\\">\\n            <input type=\\\"search\\\" placeholder=\\\"\".concat(ss.params.searchbarPlaceholder, \"\\\"/>\\n            <i class=\\\"searchbar-icon\\\"></i>\\n            <span class=\\\"input-clear-button\\\"></span>\\n          </div>\\n          <span class=\\\"searchbar-disable-button\\\">\").concat(ss.params.searchbarDisableText, \"</span>\\n        </div>\\n      </form>\\n    \");\n      return searchbarHTML;\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item, index) {\n      var ss = this;\n      if (ss.params.renderItem) return ss.params.renderItem.call(ss, item, index);\n      var itemHtml;\n\n      if (item.isLabel) {\n        itemHtml = \"<li class=\\\"item-divider\\\">\".concat(item.groupLabel, \"</li>\");\n      } else {\n        itemHtml = \"\\n        <li class=\\\"\".concat(item.className || '', \"\\\">\\n          <label class=\\\"item-\").concat(item.inputType, \" item-content\\\">\\n            <input type=\\\"\").concat(item.inputType, \"\\\" name=\\\"\").concat(item.inputName, \"\\\" value=\\\"\").concat(item.value, \"\\\" \").concat(item.selected ? 'checked' : '', \"/>\\n            <i class=\\\"icon icon-\").concat(item.inputType, \"\\\"></i>\\n            \").concat(item.hasMedia ? \"\\n              <div class=\\\"item-media\\\">\\n                \".concat(item.icon ? \"<i class=\\\"icon \".concat(item.icon, \"\\\"></i>\") : '', \"\\n                \").concat(item.image ? \"<img src=\\\"\".concat(item.image, \"\\\">\") : '', \"\\n              </div>\\n            \") : '', \"\\n            <div class=\\\"item-inner\\\">\\n              <div class=\\\"item-title\").concat(item.color ? \" color-\".concat(item.color) : '', \"\\\">\").concat(item.text, \"</div>\\n            </div>\\n          </label>\\n        </li>\\n      \");\n      }\n\n      return itemHtml;\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var ss = this;\n      if (ss.params.renderItems) return ss.params.renderItems.call(ss, ss.items);\n      var itemsHtml = \"\\n      \".concat(ss.items.map(function (item, index) {\n        return \"\".concat(ss.renderItem(item, index));\n      }).join(''), \"\\n    \");\n      return itemsHtml;\n    }\n  }, {\n    key: \"renderPage\",\n    value: function renderPage() {\n      var ss = this;\n      if (ss.params.renderPage) return ss.params.renderPage.call(ss, ss.items);\n      var pageTitle = ss.params.pageTitle;\n\n      if (typeof pageTitle === 'undefined') {\n        var $itemTitleEl = ss.$el.find('.item-title');\n        pageTitle = $itemTitleEl.length ? $itemTitleEl.text().trim() : '';\n      }\n\n      var cssClass = ss.params.cssClass;\n      var pageHtml = \"\\n      <div class=\\\"page smart-select-page \".concat(cssClass, \"\\\" data-name=\\\"smart-select-page\\\" data-select-name=\\\"\").concat(ss.selectName, \"\\\">\\n        <div class=\\\"navbar \").concat(ss.params.navbarColorTheme ? \"color-\".concat(ss.params.navbarColorTheme) : '', \"\\\">\\n          <div class=\\\"navbar-inner sliding \").concat(ss.params.navbarColorTheme ? \"color-\".concat(ss.params.navbarColorTheme) : '', \"\\\">\\n            <div class=\\\"left\\\">\\n              <a href=\\\"#\\\" class=\\\"link back\\\">\\n                <i class=\\\"icon icon-back\\\"></i>\\n                <span class=\\\"ios-only\\\">\").concat(ss.params.pageBackLinkText, \"</span>\\n              </a>\\n            </div>\\n            \").concat(pageTitle ? \"<div class=\\\"title\\\">\".concat(pageTitle, \"</div>\") : '', \"\\n            \").concat(ss.params.searchbar ? \"<div class=\\\"subnavbar\\\">\".concat(ss.renderSearchbar(), \"</div>\") : '', \"\\n          </div>\\n        </div>\\n        \").concat(ss.params.searchbar ? '<div class=\"searchbar-backdrop\"></div>' : '', \"\\n        <div class=\\\"page-content\\\">\\n          <div class=\\\"list smart-select-list-\").concat(ss.id, \" \").concat(ss.params.virtualList ? ' virtual-list' : '', \" \").concat(ss.params.formColorTheme ? \"color-\".concat(ss.params.formColorTheme) : '', \"\\\">\\n            <ul>\").concat(!ss.params.virtualList && ss.renderItems(ss.items), \"</ul>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n      return pageHtml;\n    }\n  }, {\n    key: \"renderPopup\",\n    value: function renderPopup() {\n      var ss = this;\n      if (ss.params.renderPopup) return ss.params.renderPopup.call(ss, ss.items);\n      var pageTitle = ss.params.pageTitle;\n\n      if (typeof pageTitle === 'undefined') {\n        var $itemTitleEl = ss.$el.find('.item-title');\n        pageTitle = $itemTitleEl.length ? $itemTitleEl.text().trim() : '';\n      }\n\n      var cssClass = ss.params.cssClass || '';\n      var popupHtml = \"\\n      <div class=\\\"popup smart-select-popup \".concat(cssClass, \" \").concat(ss.params.popupTabletFullscreen ? 'popup-tablet-fullscreen' : '', \"\\\" data-select-name=\\\"\").concat(ss.selectName, \"\\\">\\n        <div class=\\\"view\\\">\\n          <div class=\\\"page smart-select-page \").concat(ss.params.searchbar ? 'page-with-subnavbar' : '', \"\\\" data-name=\\\"smart-select-page\\\">\\n            <div class=\\\"navbar \").concat(ss.params.navbarColorTheme ? \"color-\".concat(ss.params.navbarColorTheme) : '', \"\\\">\\n              <div class=\\\"navbar-inner sliding\\\">\\n                <div class=\\\"left\\\">\\n                  <a href=\\\"#\\\" class=\\\"link popup-close\\\" data-popup=\\\".smart-select-popup[data-select-name='\").concat(ss.selectName, \"']\\\">\\n                    <i class=\\\"icon icon-back\\\"></i>\\n                    <span class=\\\"ios-only\\\">\").concat(ss.params.popupCloseLinkText, \"</span>\\n                  </a>\\n                </div>\\n                \").concat(pageTitle ? \"<div class=\\\"title\\\">\".concat(pageTitle, \"</div>\") : '', \"\\n                \").concat(ss.params.searchbar ? \"<div class=\\\"subnavbar\\\">\".concat(ss.renderSearchbar(), \"</div>\") : '', \"\\n              </div>\\n            </div>\\n            \").concat(ss.params.searchbar ? '<div class=\"searchbar-backdrop\"></div>' : '', \"\\n            <div class=\\\"page-content\\\">\\n              <div class=\\\"list smart-select-list-\").concat(ss.id, \" \").concat(ss.params.virtualList ? ' virtual-list' : '', \" \").concat(ss.params.formColorTheme ? \"color-\".concat(ss.params.formColorTheme) : '', \"\\\">\\n                <ul>\").concat(!ss.params.virtualList && ss.renderItems(ss.items), \"</ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n      return popupHtml;\n    }\n  }, {\n    key: \"renderSheet\",\n    value: function renderSheet() {\n      var ss = this;\n      if (ss.params.renderSheet) return ss.params.renderSheet.call(ss, ss.items);\n      var cssClass = ss.params.cssClass;\n      var sheetHtml = \"\\n      <div class=\\\"sheet-modal smart-select-sheet \".concat(cssClass, \"\\\" data-select-name=\\\"\").concat(ss.selectName, \"\\\">\\n        <div class=\\\"toolbar toolbar-top \").concat(ss.params.toolbarColorTheme ? \"color-\".concat(ss.params.toolbarColorTheme) : '', \"\\\">\\n          <div class=\\\"toolbar-inner\\\">\\n            <div class=\\\"left\\\"></div>\\n            <div class=\\\"right\\\">\\n              <a class=\\\"link sheet-close\\\">\").concat(ss.params.sheetCloseLinkText, \"</a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"sheet-modal-inner\\\">\\n          <div class=\\\"page-content\\\">\\n            <div class=\\\"list smart-select-list-\").concat(ss.id, \" \").concat(ss.params.virtualList ? ' virtual-list' : '', \" \").concat(ss.params.formColorTheme ? \"color-\".concat(ss.params.formColorTheme) : '', \"\\\">\\n              <ul>\").concat(!ss.params.virtualList && ss.renderItems(ss.items), \"</ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n      return sheetHtml;\n    }\n  }, {\n    key: \"renderPopover\",\n    value: function renderPopover() {\n      var ss = this;\n      if (ss.params.renderPopover) return ss.params.renderPopover.call(ss, ss.items);\n      var cssClass = ss.params.cssClass;\n      var popoverHtml = \"\\n      <div class=\\\"popover smart-select-popover \".concat(cssClass, \"\\\" data-select-name=\\\"\").concat(ss.selectName, \"\\\">\\n        <div class=\\\"popover-inner\\\">\\n          <div class=\\\"list smart-select-list-\").concat(ss.id, \" \").concat(ss.params.virtualList ? ' virtual-list' : '', \" \").concat(ss.params.formColorTheme ? \"color-\".concat(ss.params.formColorTheme) : '', \"\\\">\\n            <ul>\").concat(!ss.params.virtualList && ss.renderItems(ss.items), \"</ul>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n      return popoverHtml;\n    }\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(type, containerEl) {\n      var ss = this;\n      var app = ss.app;\n      var $containerEl = $(containerEl);\n      ss.$containerEl = $containerEl;\n      ss.openedIn = type;\n      ss.opened = true; // Init VL\n\n      if (ss.params.virtualList) {\n        ss.vl = app.virtualList.create({\n          el: $containerEl.find('.virtual-list'),\n          items: ss.items,\n          renderItem: ss.renderItem.bind(ss),\n          height: ss.params.virtualListHeight,\n          searchByItem: function searchByItem(query, item) {\n            if (item.text && item.text.toLowerCase().indexOf(query.trim().toLowerCase()) >= 0) return true;\n            return false;\n          }\n        });\n      } // Init SB\n\n\n      if (ss.params.searchbar) {\n        var $searchbarEl = $containerEl.find('.searchbar');\n\n        if (type === 'page' && app.theme === 'ios') {\n          $searchbarEl = $(app.navbar.getElByPage($containerEl)).find('.searchbar');\n        }\n\n        if (ss.params.appendSearchbarNotFound && (type === 'page' || type === 'popup')) {\n          var $notFoundEl = null;\n\n          if (typeof ss.params.appendSearchbarNotFound === 'string') {\n            $notFoundEl = $(\"<div class=\\\"block searchbar-not-found\\\">\".concat(ss.params.appendSearchbarNotFound, \"</div>\"));\n          } else if (typeof ss.params.appendSearchbarNotFound === 'boolean') {\n            $notFoundEl = $('<div class=\"block searchbar-not-found\">Nothing found</div>');\n          } else {\n            $notFoundEl = ss.params.appendSearchbarNotFound;\n          }\n\n          if ($notFoundEl) {\n            $containerEl.find('.page-content').append($notFoundEl[0]);\n          }\n        }\n\n        var searchbarParams = Utils.extend({\n          el: $searchbarEl,\n          backdropEl: $containerEl.find('.searchbar-backdrop'),\n          searchContainer: \".smart-select-list-\".concat(ss.id),\n          searchIn: '.item-title'\n        }, typeof ss.params.searchbar === 'object' ? ss.params.searchbar : {});\n        ss.searchbar = app.searchbar.create(searchbarParams);\n      } // Check for max length\n\n\n      if (ss.maxLength) {\n        ss.checkMaxLength();\n      } // Close on select\n\n\n      if (ss.params.closeOnSelect) {\n        ss.$containerEl.find(\"input[type=\\\"radio\\\"][name=\\\"\".concat(ss.inputName, \"\\\"]:checked\")).parents('label').once('click', function () {\n          ss.close();\n        });\n      } // Attach input events\n\n\n      ss.attachInputsEvents();\n      ss.$el.trigger('smartselect:open', ss);\n      ss.emit('local::open smartSelectOpen', ss);\n    }\n  }, {\n    key: \"onOpened\",\n    value: function onOpened() {\n      var ss = this;\n      ss.$el.trigger('smartselect:opened', ss);\n      ss.emit('local::opened smartSelectOpened', ss);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      var ss = this;\n      if (ss.destroyed) return; // Destroy VL\n\n      if (ss.vl && ss.vl.destroy) {\n        ss.vl.destroy();\n        ss.vl = null;\n        delete ss.vl;\n      } // Destroy SB\n\n\n      if (ss.searchbar && ss.searchbar.destroy) {\n        ss.searchbar.destroy();\n        ss.searchbar = null;\n        delete ss.searchbar;\n      } // Detach events\n\n\n      ss.detachInputsEvents();\n      ss.$el.trigger('smartselect:close', ss);\n      ss.emit('local::close smartSelectClose', ss);\n    }\n  }, {\n    key: \"onClosed\",\n    value: function onClosed() {\n      var ss = this;\n      if (ss.destroyed) return;\n      ss.opened = false;\n      ss.$containerEl = null;\n      delete ss.$containerEl;\n      ss.$el.trigger('smartselect:closed', ss);\n      ss.emit('local::closed smartSelectClosed', ss);\n    }\n  }, {\n    key: \"openPage\",\n    value: function openPage() {\n      var ss = this;\n      if (ss.opened) return ss;\n      ss.getItemsData();\n      var pageHtml = ss.renderPage(ss.items);\n      var view = ss.getView();\n      view.router.navigate({\n        url: ss.url,\n        route: {\n          content: pageHtml,\n          path: ss.url,\n          on: {\n            pageBeforeIn: function pageBeforeIn(e, page) {\n              ss.onOpen('page', page.el);\n            },\n            pageAfterIn: function pageAfterIn(e, page) {\n              ss.onOpened('page', page.el);\n            },\n            pageBeforeOut: function pageBeforeOut(e, page) {\n              ss.onClose('page', page.el);\n            },\n            pageAfterOut: function pageAfterOut(e, page) {\n              ss.onClosed('page', page.el);\n            }\n          }\n        }\n      });\n      return ss;\n    }\n  }, {\n    key: \"openPopup\",\n    value: function openPopup() {\n      var ss = this;\n      if (ss.opened) return ss;\n      ss.getItemsData();\n      var popupHtml = ss.renderPopup(ss.items);\n      var popupParams = {\n        content: popupHtml,\n        on: {\n          popupOpen: function popupOpen(popup) {\n            ss.onOpen('popup', popup.el);\n          },\n          popupOpened: function popupOpened(popup) {\n            ss.onOpened('popup', popup.el);\n          },\n          popupClose: function popupClose(popup) {\n            ss.onClose('popup', popup.el);\n          },\n          popupClosed: function popupClosed(popup) {\n            ss.onClosed('popup', popup.el);\n          }\n        }\n      };\n\n      if (ss.params.routableModals) {\n        var view = ss.getView();\n        view.router.navigate({\n          url: ss.url,\n          route: {\n            path: ss.url,\n            popup: popupParams\n          }\n        });\n      } else {\n        ss.modal = ss.app.popup.create(popupParams).open();\n      }\n\n      return ss;\n    }\n  }, {\n    key: \"openSheet\",\n    value: function openSheet() {\n      var ss = this;\n      if (ss.opened) return ss;\n      ss.getItemsData();\n      var sheetHtml = ss.renderSheet(ss.items);\n      var sheetParams = {\n        content: sheetHtml,\n        backdrop: false,\n        scrollToEl: ss.$el,\n        closeByOutsideClick: true,\n        on: {\n          sheetOpen: function sheetOpen(sheet) {\n            ss.onOpen('sheet', sheet.el);\n          },\n          sheetOpened: function sheetOpened(sheet) {\n            ss.onOpened('sheet', sheet.el);\n          },\n          sheetClose: function sheetClose(sheet) {\n            ss.onClose('sheet', sheet.el);\n          },\n          sheetClosed: function sheetClosed(sheet) {\n            ss.onClosed('sheet', sheet.el);\n          }\n        }\n      };\n\n      if (ss.params.routableModals) {\n        var view = ss.getView();\n        view.router.navigate({\n          url: ss.url,\n          route: {\n            path: ss.url,\n            sheet: sheetParams\n          }\n        });\n      } else {\n        ss.modal = ss.app.sheet.create(sheetParams).open();\n      }\n\n      return ss;\n    }\n  }, {\n    key: \"openPopover\",\n    value: function openPopover() {\n      var ss = this;\n      if (ss.opened) return ss;\n      ss.getItemsData();\n      var popoverHtml = ss.renderPopover(ss.items);\n      var popoverParams = {\n        content: popoverHtml,\n        targetEl: ss.$el,\n        on: {\n          popoverOpen: function popoverOpen(popover) {\n            ss.onOpen('popover', popover.el);\n          },\n          popoverOpened: function popoverOpened(popover) {\n            ss.onOpened('popover', popover.el);\n          },\n          popoverClose: function popoverClose(popover) {\n            ss.onClose('popover', popover.el);\n          },\n          popoverClosed: function popoverClosed(popover) {\n            ss.onClosed('popover', popover.el);\n          }\n        }\n      };\n\n      if (ss.params.routableModals) {\n        var view = ss.getView();\n        view.router.navigate({\n          url: ss.url,\n          route: {\n            path: ss.url,\n            popover: popoverParams\n          }\n        });\n      } else {\n        ss.modal = ss.app.popover.create(popoverParams).open();\n      }\n\n      return ss;\n    }\n  }, {\n    key: \"open\",\n    value: function open(type) {\n      var ss = this;\n      if (ss.opened) return ss;\n      var openIn = type || ss.params.openIn;\n      ss[\"open\".concat(openIn.split('').map(function (el, index) {\n        if (index === 0) return el.toUpperCase();\n        return el;\n      }).join(''))]();\n      return ss;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var ss = this;\n      if (!ss.opened) return ss;\n\n      if (ss.params.routableModals || ss.openedIn === 'page') {\n        var view = ss.getView();\n        view.router.back();\n      } else {\n        ss.modal.once('modalClosed', function () {\n          Utils.nextTick(function () {\n            ss.modal.destroy();\n            delete ss.modal;\n          });\n        });\n        ss.modal.close();\n      }\n\n      return ss;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var ss = this;\n      ss.attachEvents();\n      ss.setTextValue();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var ss = this;\n      ss.emit('local::beforeDestroy smartSelectBeforeDestroy', ss);\n      ss.$el.trigger('smartselect:beforedestroy', ss);\n      ss.detachEvents();\n      delete ss.$el[0].f7SmartSelect;\n      Utils.deleteProps(ss);\n      ss.destroyed = true;\n    }\n  }]);\n\n  return SmartSelect;\n}(Framework7Class);\n\nexport default SmartSelect;","map":null,"metadata":{},"sourceType":"module"}
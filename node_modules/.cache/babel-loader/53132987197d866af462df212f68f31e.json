{"ast":null,"code":"import $ from 'dom7';\nimport Utils from '../../utils/utils';\nvar Progressbar = {\n  set: function set() {\n    var app = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var el = args[0],\n        progress = args[1],\n        duration = args[2];\n\n    if (typeof args[0] === 'number') {\n      progress = args[0];\n      duration = args[1];\n      el = app.root;\n    }\n\n    if (typeof progress === 'undefined' || progress === null) return el;\n    if (!progress) progress = 0;\n    var $el = $(el || app.root);\n\n    if ($el.length === 0) {\n      return el;\n    }\n\n    var progressNormalized = Math.min(Math.max(progress, 0), 100);\n    var $progressbarEl;\n    if ($el.hasClass('progressbar')) $progressbarEl = $el.eq(0);else {\n      $progressbarEl = $el.children('.progressbar');\n    }\n\n    if ($progressbarEl.length === 0 || $progressbarEl.hasClass('progressbar-infinite')) {\n      return $progressbarEl;\n    }\n\n    var $progressbarLine = $progressbarEl.children('span');\n\n    if ($progressbarLine.length === 0) {\n      $progressbarLine = $('<span></span>');\n      $progressbarEl.append($progressbarLine);\n    }\n\n    $progressbarLine.transition(typeof duration !== 'undefined' ? duration : '').transform(\"translate3d(\".concat(-100 + progressNormalized, \"%,0,0)\"));\n    return $progressbarEl[0];\n  },\n  show: function show() {\n    var app = this; // '.page', 50, 'multi'\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var el = args[0],\n        progress = args[1],\n        color = args[2];\n    var type = 'determined';\n\n    if (args.length === 2) {\n      if ((typeof args[0] === 'string' || typeof args[0] === 'object') && typeof args[1] === 'string') {\n        // '.page', 'multi'\n        el = args[0];\n        color = args[1];\n        progress = args[2];\n        type = 'infinite';\n      } else if (typeof args[0] === 'number' && typeof args[1] === 'string') {\n        // 50, 'multi'\n        progress = args[0];\n        color = args[1];\n        el = app.root;\n      }\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'number') {\n        el = app.root;\n        progress = args[0];\n      } else if (typeof args[0] === 'string') {\n        type = 'infinite';\n        el = app.root;\n        color = args[0];\n      }\n    } else if (args.length === 0) {\n      type = 'infinite';\n      el = app.root;\n    }\n\n    var $el = $(el);\n    if ($el.length === 0) return undefined;\n    var $progressbarEl;\n\n    if ($el.hasClass('progressbar') || $el.hasClass('progressbar-infinite')) {\n      $progressbarEl = $el;\n    } else {\n      $progressbarEl = $el.children('.progressbar:not(.progressbar-out), .progressbar-infinite:not(.progressbar-out)');\n\n      if ($progressbarEl.length === 0) {\n        $progressbarEl = $(\"\\n          <span class=\\\"progressbar\".concat(type === 'infinite' ? '-infinite' : '').concat(color ? \" color-\".concat(color) : '', \" progressbar-in\\\">\\n            \").concat(type === 'infinite' ? '' : '<span></span>', \"\\n          </span>\"));\n        $el.append($progressbarEl);\n      }\n    }\n\n    if (typeof progress !== 'undefined') {\n      app.progressbar.set($progressbarEl, progress);\n    }\n\n    return $progressbarEl[0];\n  },\n  hide: function hide(el) {\n    var removeAfterHide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var app = this;\n    var $el = $(el || app.root);\n    if ($el.length === 0) return undefined;\n    var $progressbarEl;\n\n    if ($el.hasClass('progressbar') || $el.hasClass('progressbar-infinite')) {\n      $progressbarEl = $el;\n    } else {\n      $progressbarEl = $el.children('.progressbar, .progressbar-infinite');\n    }\n\n    if ($progressbarEl.length === 0 || !$progressbarEl.hasClass('progressbar-in') || $progressbarEl.hasClass('progressbar-out')) {\n      return $progressbarEl;\n    }\n\n    $progressbarEl.removeClass('progressbar-in').addClass('progressbar-out').animationEnd(function () {\n      if (removeAfterHide) {\n        $progressbarEl.remove();\n      }\n    });\n    return $progressbarEl;\n  }\n};\nexport default {\n  name: 'progressbar',\n  create: function create() {\n    var app = this;\n    Utils.extend(app, {\n      progressbar: {\n        set: Progressbar.set.bind(app),\n        show: Progressbar.show.bind(app),\n        hide: Progressbar.hide.bind(app)\n      }\n    });\n  },\n  on: {\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.progressbar').each(function (index, progressbarEl) {\n        var $progressbarEl = $(progressbarEl);\n        app.progressbar.set($progressbarEl, $progressbarEl.attr('data-progress'));\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
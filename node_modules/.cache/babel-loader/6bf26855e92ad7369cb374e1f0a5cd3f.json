{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\n/* eslint indent: [\"off\"] */\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Modal from '../modal/modal-class';\n\nvar Actions =\n/*#__PURE__*/\nfunction (_Modal) {\n  _inherits(Actions, _Modal);\n\n  function Actions(app, params) {\n    var _this;\n\n    _classCallCheck(this, Actions);\n\n    var extendedParams = Utils.extend({\n      on: {}\n    }, app.params.actions, params); // Extends with open/close Modal methods;\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Actions).call(this, app, extendedParams));\n\n    var actions = _assertThisInitialized(_assertThisInitialized(_this));\n\n    actions.params = extendedParams; // Buttons\n\n    var groups;\n\n    if (actions.params.buttons) {\n      groups = actions.params.buttons;\n      if (!Array.isArray(groups[0])) groups = [groups];\n    }\n\n    actions.groups = groups; // Find Element\n\n    var $el;\n\n    if (actions.params.el) {\n      $el = $(actions.params.el);\n    } else if (actions.params.content) {\n      $el = $(actions.params.content);\n    } else if (actions.params.buttons) {\n      if (actions.params.convertToPopover) {\n        actions.popoverHtml = actions.renderPopover();\n      }\n\n      actions.actionsHtml = actions.render();\n    }\n\n    if ($el && $el.length > 0 && $el[0].f7Modal) {\n      return _possibleConstructorReturn(_this, $el[0].f7Modal);\n    }\n\n    if ($el && $el.length === 0 && !(actions.actionsHtml || actions.popoverHtml)) {\n      return _possibleConstructorReturn(_this, actions.destroy());\n    } // Backdrop\n\n\n    var $backdropEl;\n\n    if (actions.params.backdrop) {\n      $backdropEl = app.root.children('.actions-backdrop');\n\n      if ($backdropEl.length === 0) {\n        $backdropEl = $('<div class=\"actions-backdrop\"></div>');\n        app.root.append($backdropEl);\n      }\n    }\n\n    var originalOpen = actions.open;\n    var originalClose = actions.close;\n    var popover;\n\n    function buttonOnClick(e) {\n      var buttonEl = this;\n      var buttonIndex;\n      var groupIndex;\n\n      if ($(buttonEl).hasClass('list-button')) {\n        buttonIndex = $(buttonEl).parents('li').index();\n        groupIndex = $(buttonEl).parents('.list').index();\n      } else {\n        buttonIndex = $(buttonEl).index();\n        groupIndex = $(buttonEl).parents('.actions-group').index();\n      }\n\n      if (typeof groups !== 'undefined') {\n        var button = groups[groupIndex][buttonIndex];\n        if (button.onClick) button.onClick(actions, e);\n        if (actions.params.onClick) actions.params.onClick(actions, e);\n        if (button.close !== false) actions.close();\n      }\n    }\n\n    actions.open = function open(animate) {\n      var convertToPopover = false;\n      var _actions$params = actions.params,\n          targetEl = _actions$params.targetEl,\n          targetX = _actions$params.targetX,\n          targetY = _actions$params.targetY,\n          targetWidth = _actions$params.targetWidth,\n          targetHeight = _actions$params.targetHeight;\n\n      if (actions.params.convertToPopover && (targetEl || targetX !== undefined && targetY !== undefined)) {\n        // Popover\n        if (actions.params.forceToPopover || app.device.ios && app.device.ipad || app.width >= 768) {\n          convertToPopover = true;\n        }\n      }\n\n      if (convertToPopover && actions.popoverHtml) {\n        popover = app.popover.create({\n          content: actions.popoverHtml,\n          backdrop: actions.params.backdrop,\n          targetEl: targetEl,\n          targetX: targetX,\n          targetY: targetY,\n          targetWidth: targetWidth,\n          targetHeight: targetHeight\n        });\n        popover.open(animate);\n        popover.once('popoverOpened', function () {\n          popover.$el.find('.list-button').each(function (groupIndex, buttonEl) {\n            $(buttonEl).on('click', buttonOnClick);\n          });\n        });\n        popover.once('popoverClosed', function () {\n          popover.$el.find('.list-button').each(function (groupIndex, buttonEl) {\n            $(buttonEl).off('click', buttonOnClick);\n          });\n          Utils.nextTick(function () {\n            popover.destroy();\n            popover = undefined;\n          });\n        });\n      } else {\n        actions.$el = actions.actionsHtml ? $(actions.actionsHtml) : actions.$el;\n        actions.$el[0].f7Modal = actions;\n\n        if (actions.groups) {\n          actions.$el.find('.actions-button').each(function (groupIndex, buttonEl) {\n            $(buttonEl).on('click', buttonOnClick);\n          });\n          actions.once('actionsClosed', function () {\n            actions.$el.find('.actions-button').each(function (groupIndex, buttonEl) {\n              $(buttonEl).off('click', buttonOnClick);\n            });\n          });\n        }\n\n        actions.el = actions.$el[0];\n        originalOpen.call(actions, animate);\n      }\n\n      return actions;\n    };\n\n    actions.close = function close(animate) {\n      if (popover) {\n        popover.close(animate);\n      } else {\n        originalClose.call(actions, animate);\n      }\n\n      return actions;\n    };\n\n    Utils.extend(actions, {\n      app: app,\n      $el: $el,\n      el: $el ? $el[0] : undefined,\n      $backdropEl: $backdropEl,\n      backdropEl: $backdropEl && $backdropEl[0],\n      type: 'actions'\n    });\n\n    function handleClick(e) {\n      var target = e.target;\n      var $target = $(target);\n\n      if ($target.closest(actions.el).length === 0) {\n        if (actions.params.closeByBackdropClick && actions.params.backdrop && actions.backdropEl && actions.backdropEl === target) {\n          actions.close();\n        } else if (actions.params.closeByOutsideClick) {\n          actions.close();\n        }\n      }\n    }\n\n    actions.on('opened', function () {\n      if (actions.params.closeByBackdropClick || actions.params.closeByOutsideClick) {\n        app.on('click', handleClick);\n      }\n    });\n    actions.on('close', function () {\n      if (actions.params.closeByBackdropClick || actions.params.closeByOutsideClick) {\n        app.off('click', handleClick);\n      }\n    });\n\n    if ($el) {\n      $el[0].f7Modal = actions;\n    }\n\n    return _possibleConstructorReturn(_this, actions);\n  }\n\n  _createClass(Actions, [{\n    key: \"render\",\n    value: function render() {\n      var actions = this;\n      if (actions.params.render) return actions.params.render.call(actions, actions);\n      var groups = actions.groups;\n      return \"\\n      <div class=\\\"actions-modal\".concat(actions.params.grid ? ' actions-grid' : '', \"\\\">\\n        \").concat(groups.map(function (group) {\n        return \"<div class=\\\"actions-group\\\">\\n            \".concat(group.map(function (button) {\n          var buttonClasses = [\"actions-\".concat(button.label ? 'label' : 'button')];\n          var color = button.color,\n              bg = button.bg,\n              bold = button.bold,\n              disabled = button.disabled,\n              label = button.label,\n              text = button.text,\n              icon = button.icon;\n          if (color) buttonClasses.push(\"color-\".concat(color));\n          if (bg) buttonClasses.push(\"bg-color-\".concat(bg));\n          if (bold) buttonClasses.push('actions-button-bold');\n          if (disabled) buttonClasses.push('disabled');\n\n          if (label) {\n            return \"<div class=\\\"\".concat(buttonClasses.join(' '), \"\\\">\").concat(text, \"</div>\");\n          }\n\n          return \"\\n                <div class=\\\"\".concat(buttonClasses.join(' '), \"\\\">\\n                  \").concat(icon ? \"<div class=\\\"actions-button-media\\\">\".concat(icon, \"</div>\") : '', \"\\n                  <div class=\\\"actions-button-text\\\">\").concat(text, \"</div>\\n                </div>\").trim();\n        }).join(''), \"\\n          </div>\");\n      }).join(''), \"\\n      </div>\\n    \").trim();\n    }\n  }, {\n    key: \"renderPopover\",\n    value: function renderPopover() {\n      var actions = this;\n      if (actions.params.renderPopover) return actions.params.renderPopover.call(actions, actions);\n      var groups = actions.groups;\n      return \"\\n      <div class=\\\"popover popover-from-actions\\\">\\n        <div class=\\\"popover-inner\\\">\\n          \".concat(groups.map(function (group) {\n        return \"\\n            <div class=\\\"list\\\">\\n              <ul>\\n                \".concat(group.map(function (button) {\n          var itemClasses = [];\n          var color = button.color,\n              bg = button.bg,\n              bold = button.bold,\n              disabled = button.disabled,\n              label = button.label,\n              text = button.text,\n              icon = button.icon;\n          if (color) itemClasses.push(\"color-\".concat(color));\n          if (bg) itemClasses.push(\"bg-color-\".concat(bg));\n          if (bold) itemClasses.push('popover-from-actions-bold');\n          if (disabled) itemClasses.push('disabled');\n\n          if (label) {\n            itemClasses.push('popover-from-actions-label');\n            return \"<li class=\\\"\".concat(itemClasses.join(' '), \"\\\">\").concat(text, \"</li>\");\n          }\n\n          if (icon) {\n            itemClasses.push('item-link item-content');\n            return \"\\n                      <li>\\n                        <a class=\\\"\".concat(itemClasses.join(' '), \"\\\">\\n                          <div class=\\\"item-media\\\">\\n                            \").concat(icon, \"\\n                          </div>\\n                          <div class=\\\"item-inner\\\">\\n                            <div class=\\\"item-title\\\">\\n                              \").concat(text, \"\\n                            </div>\\n                          </div>\\n                        </a>\\n                      </li>\\n                    \");\n          }\n\n          itemClasses.push('list-button');\n          return \"\\n                    <li>\\n                      <a href=\\\"#\\\" class=\\\"\".concat(itemClasses.join(' '), \"\\\">\").concat(text, \"</a>\\n                    </li>\\n                  \");\n        }).join(''), \"\\n              </ul>\\n            </div>\\n          \");\n      }).join(''), \"\\n        </div>\\n      </div>\\n    \").trim();\n    }\n  }]);\n\n  return Actions;\n}(Modal);\n\nexport default Actions;","map":null,"metadata":{},"sourceType":"module"}
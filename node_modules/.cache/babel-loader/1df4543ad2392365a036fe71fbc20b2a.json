{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Modal from '../modal/modal-class';\n\nvar Popover =\n/*#__PURE__*/\nfunction (_Modal) {\n  _inherits(Popover, _Modal);\n\n  function Popover(app, params) {\n    var _this;\n\n    _classCallCheck(this, Popover);\n\n    var extendedParams = Utils.extend({\n      on: {}\n    }, app.params.popover, params); // Extends with open/close Modal methods;\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popover).call(this, app, extendedParams));\n\n    var popover = _assertThisInitialized(_assertThisInitialized(_this));\n\n    popover.params = extendedParams; // Find Element\n\n    var $el;\n\n    if (!popover.params.el) {\n      $el = $(popover.params.content);\n    } else {\n      $el = $(popover.params.el);\n    }\n\n    if ($el && $el.length > 0 && $el[0].f7Modal) {\n      return _possibleConstructorReturn(_this, $el[0].f7Modal);\n    } // Find Target\n\n\n    var $targetEl = $(popover.params.targetEl).eq(0);\n\n    if ($el.length === 0) {\n      return _possibleConstructorReturn(_this, popover.destroy());\n    } // Backdrop\n\n\n    var $backdropEl;\n\n    if (popover.params.backdrop) {\n      $backdropEl = app.root.children('.popover-backdrop');\n\n      if ($backdropEl.length === 0) {\n        $backdropEl = $('<div class=\"popover-backdrop\"></div>');\n        app.root.append($backdropEl);\n      }\n    } // Find Angle\n\n\n    var $angleEl;\n\n    if ($el.find('.popover-angle').length === 0) {\n      $angleEl = $('<div class=\"popover-angle\"></div>');\n      $el.prepend($angleEl);\n    } else {\n      $angleEl = $el.find('.popover-angle');\n    } // Open\n\n\n    var originalOpen = popover.open;\n    Utils.extend(popover, {\n      app: app,\n      $el: $el,\n      el: $el[0],\n      $targetEl: $targetEl,\n      targetEl: $targetEl[0],\n      $angleEl: $angleEl,\n      angleEl: $angleEl[0],\n      $backdropEl: $backdropEl,\n      backdropEl: $backdropEl && $backdropEl[0],\n      type: 'popover',\n      open: function open() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var targetEl = args[0],\n            animate = args[1];\n\n        if (typeof args[0] === 'boolean') {\n          animate = args[0];\n          targetEl = args[1];\n        }\n\n        if (targetEl) {\n          popover.$targetEl = $(targetEl);\n          popover.targetEl = popover.$targetEl[0];\n        }\n\n        return originalOpen.call(popover, animate);\n      }\n    });\n\n    function handleResize() {\n      popover.resize();\n    }\n\n    popover.on('popoverOpen', function () {\n      popover.resize();\n      app.on('resize', handleResize);\n      popover.on('popoverClose popoverBeforeDestroy', function () {\n        app.off('resize', handleResize);\n      });\n    });\n\n    function handleClick(e) {\n      var target = e.target;\n      var $target = $(target);\n\n      if ($target.closest(popover.el).length === 0) {\n        if (popover.params.closeByBackdropClick && popover.params.backdrop && popover.backdropEl && popover.backdropEl === target) {\n          popover.close();\n        } else if (popover.params.closeByOutsideClick) {\n          popover.close();\n        }\n      }\n    }\n\n    popover.on('popoverOpened', function () {\n      if (popover.params.closeByOutsideClick || popover.params.closeByBackdropClick) {\n        app.on('click', handleClick);\n      }\n    });\n    popover.on('popoverClose', function () {\n      if (popover.params.closeByOutsideClick || popover.params.closeByBackdropClick) {\n        app.off('click', handleClick);\n      }\n    });\n    $el[0].f7Modal = popover;\n    return _possibleConstructorReturn(_this, popover);\n  }\n\n  _createClass(Popover, [{\n    key: \"resize\",\n    value: function resize() {\n      var popover = this;\n      var app = popover.app,\n          $el = popover.$el,\n          $targetEl = popover.$targetEl,\n          $angleEl = popover.$angleEl;\n      var _popover$params = popover.params,\n          targetX = _popover$params.targetX,\n          targetY = _popover$params.targetY;\n      $el.css({\n        left: '',\n        top: ''\n      });\n      var _ref = [$el.width(), $el.height()],\n          width = _ref[0],\n          height = _ref[1];\n      var angleSize = 0;\n      var angleLeft;\n      var angleTop;\n\n      if (app.theme === 'ios') {\n        $angleEl.removeClass('on-left on-right on-top on-bottom').css({\n          left: '',\n          top: ''\n        });\n        angleSize = $angleEl.width() / 2;\n      } else {\n        $el.removeClass('popover-on-left popover-on-right popover-on-top popover-on-bottom').css({\n          left: '',\n          top: ''\n        });\n      }\n\n      var targetWidth;\n      var targetHeight;\n      var targetOffsetLeft;\n      var targetOffsetTop;\n\n      if ($targetEl && $targetEl.length > 0) {\n        targetWidth = $targetEl.outerWidth();\n        targetHeight = $targetEl.outerHeight();\n        var targetOffset = $targetEl.offset();\n        targetOffsetLeft = targetOffset.left - app.left;\n        targetOffsetTop = targetOffset.top - app.top;\n        var targetParentPage = $targetEl.parents('.page');\n\n        if (targetParentPage.length > 0) {\n          targetOffsetTop -= targetParentPage[0].scrollTop;\n        }\n      } else if (typeof targetX !== 'undefined' && targetY !== 'undefined') {\n        targetOffsetLeft = targetX;\n        targetOffsetTop = targetY;\n        targetWidth = popover.params.targetWidth || 0;\n        targetHeight = popover.params.targetHeight || 0;\n      }\n\n      var left = 0,\n          top = 0,\n          diff = 0; // Top Position\n\n      var position = app.theme === 'md' ? 'bottom' : 'top';\n\n      if (app.theme === 'md') {\n        if (height < app.height - targetOffsetTop - targetHeight) {\n          // On bottom\n          position = 'bottom';\n          top = targetOffsetTop;\n        } else if (height < targetOffsetTop) {\n          // On top\n          top = targetOffsetTop - height + targetHeight;\n          position = 'top';\n        } else {\n          // On middle\n          position = 'bottom';\n          top = targetOffsetTop;\n        }\n\n        if (top <= 0) {\n          top = 8;\n        } else if (top + height >= app.height) {\n          top = app.height - height - 8;\n        } // Horizontal Position\n\n\n        left = targetOffsetLeft + targetWidth - width - 8;\n\n        if (left + width >= app.width - 8) {\n          left = targetOffsetLeft + targetWidth - width - 8;\n        }\n\n        if (left < 8) {\n          left = 8;\n        }\n\n        if (position === 'top') {\n          $el.addClass('popover-on-top');\n        }\n\n        if (position === 'bottom') {\n          $el.addClass('popover-on-bottom');\n        }\n      } else {\n        if (height + angleSize < targetOffsetTop) {\n          // On top\n          top = targetOffsetTop - height - angleSize;\n        } else if (height + angleSize < app.height - targetOffsetTop - targetHeight) {\n          // On bottom\n          position = 'bottom';\n          top = targetOffsetTop + targetHeight + angleSize;\n        } else {\n          // On middle\n          position = 'middle';\n          top = targetHeight / 2 + targetOffsetTop - height / 2;\n          diff = top;\n\n          if (top <= 0) {\n            top = 5;\n          } else if (top + height >= app.height) {\n            top = app.height - height - 5;\n          }\n\n          diff -= top;\n        } // Horizontal Position\n\n\n        if (position === 'top' || position === 'bottom') {\n          left = targetWidth / 2 + targetOffsetLeft - width / 2;\n          diff = left;\n          if (left < 5) left = 5;\n          if (left + width > app.width) left = app.width - width - 5;\n          if (left < 0) left = 0;\n\n          if (position === 'top') {\n            $angleEl.addClass('on-bottom');\n          }\n\n          if (position === 'bottom') {\n            $angleEl.addClass('on-top');\n          }\n\n          diff -= left;\n          angleLeft = width / 2 - angleSize + diff;\n          angleLeft = Math.max(Math.min(angleLeft, width - angleSize * 2 - 13), 13);\n          $angleEl.css({\n            left: \"\".concat(angleLeft, \"px\")\n          });\n        } else if (position === 'middle') {\n          left = targetOffsetLeft - width - angleSize;\n          $angleEl.addClass('on-right');\n\n          if (left < 5 || left + width > app.width) {\n            if (left < 5) left = targetOffsetLeft + targetWidth + angleSize;\n            if (left + width > app.width) left = app.width - width - 5;\n            $angleEl.removeClass('on-right').addClass('on-left');\n          }\n\n          angleTop = height / 2 - angleSize + diff;\n          angleTop = Math.max(Math.min(angleTop, height - angleSize * 2 - 13), 13);\n          $angleEl.css({\n            top: \"\".concat(angleTop, \"px\")\n          });\n        }\n      } // Apply Styles\n\n\n      $el.css({\n        top: \"\".concat(top, \"px\"),\n        left: \"\".concat(left, \"px\")\n      });\n    }\n  }]);\n\n  return Popover;\n}(Modal);\n\nexport default Popover;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import $ from 'dom7';\nimport Tooltip from './tooltip-class';\nimport ConstructorMethods from '../../utils/constructor-methods';\nexport default {\n  name: 'tooltip',\n  static: {\n    Tooltip: Tooltip\n  },\n  create: function create() {\n    var app = this;\n    app.tooltip = ConstructorMethods({\n      defaultSelector: '.tooltip',\n      constructor: Tooltip,\n      app: app,\n      domProp: 'f7Tooltip'\n    });\n\n    app.tooltip.show = function show(el) {\n      var $el = $(el);\n      if ($el.length === 0) return undefined;\n      var tooltip = $el[0].f7Tooltip;\n      if (!tooltip) return undefined;\n      tooltip.show($el[0]);\n      return tooltip;\n    };\n\n    app.tooltip.hide = function hide(el) {\n      var $el = $(el);\n      if ($el.length === 0) return undefined;\n      var tooltip = $el[0].f7Tooltip;\n      if (!tooltip) return undefined;\n      tooltip.hide();\n      return tooltip;\n    };\n\n    app.tooltip.setText = function text(el, newText) {\n      var $el = $(el);\n      if ($el.length === 0) return undefined;\n      var tooltip = $el[0].f7Tooltip;\n      if (!tooltip) return undefined;\n      tooltip.setText(newText);\n      return tooltip;\n    };\n  },\n  params: {\n    tooltip: {\n      targetEl: null,\n      text: null,\n      cssClass: null,\n      render: null\n    }\n  },\n  on: {\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      $(tabEl).find('.tooltip-init').each(function (index, el) {\n        var text = $(el).attr('data-tooltip');\n        if (!text) return;\n        app.tooltip.create({\n          targetEl: el,\n          text: text\n        });\n      });\n    },\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      $(tabEl).find('.tooltip-init').each(function (index, el) {\n        if (el.f7Tooltip) el.f7Tooltip.destroy();\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.tooltip-init').each(function (index, el) {\n        var text = $(el).attr('data-tooltip');\n        if (!text) return;\n        app.tooltip.create({\n          targetEl: el,\n          text: text\n        });\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      page.$el.find('.tooltip-init').each(function (index, el) {\n        if (el.f7Tooltip) el.f7Tooltip.destroy();\n      });\n    }\n  },\n  vnode: {\n    'tooltip-init': {\n      insert: function insert(vnode) {\n        var app = this;\n        var el = vnode.elm;\n        var text = $(el).attr('data-tooltip');\n        if (!text) return;\n        app.tooltip.create({\n          targetEl: el,\n          text: text\n        });\n      },\n      destroy: function destroy(vnode) {\n        var el = vnode.elm;\n        if (el.f7Tooltip) el.f7Tooltip.destroy();\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
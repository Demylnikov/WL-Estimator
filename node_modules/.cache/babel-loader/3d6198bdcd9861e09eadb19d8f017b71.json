{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\n/* eslint indent: [\"off\"] */\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Framework7Class from '../../utils/class';\n\nvar PhotoBrowser =\n/*#__PURE__*/\nfunction (_Framework7Class) {\n  _inherits(PhotoBrowser, _Framework7Class);\n\n  function PhotoBrowser(app) {\n    var _this;\n\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PhotoBrowser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PhotoBrowser).call(this, params, [app]));\n\n    var pb = _assertThisInitialized(_assertThisInitialized(_this));\n\n    pb.app = app;\n    var defaults = Utils.extend({\n      on: {}\n    }, app.params.photoBrowser); // Extend defaults with modules params\n\n    pb.useModulesParams(defaults);\n    pb.params = Utils.extend(defaults, params);\n    Utils.extend(pb, {\n      exposed: false,\n      opened: false,\n      activeIndex: pb.params.swiper.initialSlide,\n      url: pb.params.url,\n      view: pb.params.view || app.views.main,\n      swipeToClose: {\n        allow: true,\n        isTouched: false,\n        diff: undefined,\n        start: undefined,\n        current: undefined,\n        started: false,\n        activeSlide: undefined,\n        timeStart: undefined\n      }\n    }); // Install Modules\n\n    pb.useModules(); // Init\n\n    pb.init();\n    return _this;\n  }\n\n  _createClass(PhotoBrowser, [{\n    key: \"onSlideChange\",\n    value: function onSlideChange(swiper) {\n      var pb = this;\n      pb.activeIndex = swiper.activeIndex;\n      var current = swiper.activeIndex + 1;\n      var total = pb.params.virtualSlides ? pb.params.photos.length : swiper.slides.length;\n\n      if (swiper.params.loop) {\n        total -= 2;\n        current -= swiper.loopedSlides;\n        if (current < 1) current = total + current;\n        if (current > total) current -= total;\n      }\n\n      var $activeSlideEl = pb.params.virtualSlides ? swiper.$wrapperEl.find(\".swiper-slide[data-swiper-slide-index=\\\"\".concat(swiper.activeIndex, \"\\\"]\")) : swiper.slides.eq(swiper.activeIndex);\n      var $previousSlideEl = pb.params.virtualSlides ? swiper.$wrapperEl.find(\".swiper-slide[data-swiper-slide-index=\\\"\".concat(swiper.previousIndex, \"\\\"]\")) : swiper.slides.eq(swiper.previousIndex);\n      var $currentEl = pb.$el.find('.photo-browser-current');\n      var $totalEl = pb.$el.find('.photo-browser-total');\n\n      if (pb.params.type === 'page' && pb.params.navbar && $currentEl.length === 0 && pb.app.theme === 'ios') {\n        var navbarEl = pb.app.navbar.getElByPage(pb.$el);\n\n        if (navbarEl) {\n          $currentEl = $(navbarEl).find('.photo-browser-current');\n          $totalEl = $(navbarEl).find('.photo-browser-total');\n        }\n      }\n\n      $currentEl.text(current);\n      $totalEl.text(total); // Update captions\n\n      if (pb.captions.length > 0) {\n        var captionIndex = swiper.params.loop ? $activeSlideEl.attr('data-swiper-slide-index') : pb.activeIndex;\n        pb.$captionsContainerEl.find('.photo-browser-caption-active').removeClass('photo-browser-caption-active');\n        pb.$captionsContainerEl.find(\"[data-caption-index=\\\"\".concat(captionIndex, \"\\\"]\")).addClass('photo-browser-caption-active');\n      } // Stop Video\n\n\n      var previousSlideVideo = $previousSlideEl.find('video');\n\n      if (previousSlideVideo.length > 0) {\n        if ('pause' in previousSlideVideo[0]) previousSlideVideo[0].pause();\n      }\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart() {\n      var pb = this;\n      var swipeToClose = pb.swipeToClose;\n      if (!swipeToClose.allow) return;\n      swipeToClose.isTouched = true;\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(e) {\n      var pb = this;\n      var swipeToClose = pb.swipeToClose;\n      if (!swipeToClose.isTouched) return;\n\n      if (!swipeToClose.started) {\n        swipeToClose.started = true;\n        swipeToClose.start = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n        if (pb.params.virtualSlides) {\n          swipeToClose.activeSlide = pb.swiper.$wrapperEl.children('.swiper-slide-active');\n        } else {\n          swipeToClose.activeSlide = pb.swiper.slides.eq(pb.swiper.activeIndex);\n        }\n\n        swipeToClose.timeStart = Utils.now();\n      }\n\n      e.preventDefault();\n      swipeToClose.current = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      swipeToClose.diff = swipeToClose.start - swipeToClose.current;\n      var opacity = 1 - Math.abs(swipeToClose.diff) / 300;\n      var color = pb.exposed || pb.params.theme === 'dark' ? 0 : 255;\n      swipeToClose.activeSlide.transform(\"translate3d(0,\".concat(-swipeToClose.diff, \"px,0)\"));\n      pb.swiper.$el.css('background-color', \"rgba(\".concat(color, \", \").concat(color, \", \").concat(color, \", \").concat(opacity, \")\")).transition(0);\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd() {\n      var pb = this;\n      var swipeToClose = pb.swipeToClose;\n      swipeToClose.isTouched = false;\n\n      if (!swipeToClose.started) {\n        swipeToClose.started = false;\n        return;\n      }\n\n      swipeToClose.started = false;\n      swipeToClose.allow = false;\n      var diff = Math.abs(swipeToClose.diff);\n      var timeDiff = new Date().getTime() - swipeToClose.timeStart;\n\n      if (timeDiff < 300 && diff > 20 || timeDiff >= 300 && diff > 100) {\n        Utils.nextTick(function () {\n          if (pb.$el) {\n            if (swipeToClose.diff < 0) pb.$el.addClass('swipe-close-to-bottom');else pb.$el.addClass('swipe-close-to-top');\n          }\n\n          pb.emit('local::swipeToClose', pb);\n          pb.close();\n          swipeToClose.allow = true;\n        });\n        return;\n      }\n\n      if (diff !== 0) {\n        swipeToClose.activeSlide.addClass('photo-browser-transitioning').transitionEnd(function () {\n          swipeToClose.allow = true;\n          swipeToClose.activeSlide.removeClass('photo-browser-transitioning');\n        });\n      } else {\n        swipeToClose.allow = true;\n      }\n\n      pb.swiper.$el.transition('').css('background-color', '');\n      swipeToClose.activeSlide.transform('');\n    } // Render Functions\n\n  }, {\n    key: \"renderNavbar\",\n    value: function renderNavbar() {\n      var pb = this;\n      if (pb.params.renderNavbar) return pb.params.renderNavbar.call(pb);\n      var iconsColor = pb.params.iconsColor;\n      if (!pb.params.iconsColor && pb.params.theme === 'dark') iconsColor = 'white';\n      var backLinkText = pb.app.theme === 'ios' && pb.params.backLinkText ? pb.params.backLinkText : '';\n      var isPopup = pb.params.type !== 'page';\n      var navbarHtml = \"\\n      <div class=\\\"navbar\\\">\\n        <div class=\\\"navbar-inner sliding\\\">\\n          <div class=\\\"left\\\">\\n            <a href=\\\"#\\\" class=\\\"link \".concat(isPopup ? 'popup-close' : '', \" \").concat(!backLinkText ? 'icon-only' : '', \" \").concat(!isPopup ? 'back' : '', \"\\\" \").concat(isPopup ? 'data-popup=\".photo-browser-popup\"' : '', \">\\n              <i class=\\\"icon icon-back \").concat(iconsColor ? \"color-\".concat(iconsColor) : '', \"\\\"></i>\\n              \").concat(backLinkText ? \"<span>\".concat(backLinkText, \"</span>\") : '', \"\\n            </a>\\n          </div>\\n          <div class=\\\"title\\\">\\n            <span class=\\\"photo-browser-current\\\"></span>\\n            <span class=\\\"photo-browser-of\\\">\").concat(pb.params.navbarOfText, \"</span>\\n            <span class=\\\"photo-browser-total\\\"></span>\\n          </div>\\n          <div class=\\\"right\\\"></div>\\n        </div>\\n      </div>\\n    \").trim();\n      return navbarHtml;\n    }\n  }, {\n    key: \"renderToolbar\",\n    value: function renderToolbar() {\n      var pb = this;\n      if (pb.params.renderToolbar) return pb.params.renderToolbar.call(pb);\n      var iconsColor = pb.params.iconsColor;\n      if (!pb.params.iconsColor && pb.params.theme === 'dark') iconsColor = 'white';\n      var toolbarHtml = \"\\n      <div class=\\\"toolbar toolbar-bottom tabbar\\\">\\n        <div class=\\\"toolbar-inner\\\">\\n          <a href=\\\"#\\\" class=\\\"link photo-browser-prev\\\">\\n            <i class=\\\"icon icon-back \".concat(iconsColor ? \"color-\".concat(iconsColor) : '', \"\\\"></i>\\n          </a>\\n          <a href=\\\"#\\\" class=\\\"link photo-browser-next\\\">\\n            <i class=\\\"icon icon-forward \").concat(iconsColor ? \"color-\".concat(iconsColor) : '', \"\\\"></i>\\n          </a>\\n        </div>\\n      </div>\\n    \").trim();\n      return toolbarHtml;\n    }\n  }, {\n    key: \"renderCaption\",\n    value: function renderCaption(caption, index) {\n      var pb = this;\n      if (pb.params.renderCaption) return pb.params.renderCaption.call(pb, caption, index);\n      var captionHtml = \"\\n      <div class=\\\"photo-browser-caption\\\" data-caption-index=\\\"\".concat(index, \"\\\">\\n        \").concat(caption, \"\\n      </div>\\n    \").trim();\n      return captionHtml;\n    }\n  }, {\n    key: \"renderObject\",\n    value: function renderObject(photo, index) {\n      var pb = this;\n      if (pb.params.renderObject) return pb.params.renderObject.call(pb, photo, index);\n      var objHtml = \"\\n      <div class=\\\"photo-browser-slide photo-browser-object-slide swiper-slide\\\" data-swiper-slide-index=\\\"\".concat(index, \"\\\">\").concat(photo.html ? photo.html : photo, \"</div>\\n    \");\n      return objHtml;\n    }\n  }, {\n    key: \"renderLazyPhoto\",\n    value: function renderLazyPhoto(photo, index) {\n      var pb = this;\n      if (pb.params.renderLazyPhoto) return pb.params.renderLazyPhoto.call(pb, photo, index);\n      var photoHtml = \"\\n      <div class=\\\"photo-browser-slide photo-browser-slide-lazy swiper-slide\\\" data-swiper-slide-index=\\\"\".concat(index, \"\\\">\\n          <div class=\\\"preloader swiper-lazy-preloader \").concat(pb.params.theme === 'dark' ? 'color-white' : '', \"\\\">\").concat(Utils[\"\".concat(pb.app.theme, \"PreloaderContent\")] || '', \"</div>\\n          <span class=\\\"swiper-zoom-container\\\">\\n              <img data-src=\\\"\").concat(photo.url ? photo.url : photo, \"\\\" class=\\\"swiper-lazy\\\">\\n          </span>\\n      </div>\\n    \").trim();\n      return photoHtml;\n    }\n  }, {\n    key: \"renderPhoto\",\n    value: function renderPhoto(photo, index) {\n      var pb = this;\n      if (pb.params.renderPhoto) return pb.params.renderPhoto.call(pb, photo, index);\n      var photoHtml = \"\\n      <div class=\\\"photo-browser-slide swiper-slide\\\" data-swiper-slide-index=\\\"\".concat(index, \"\\\">\\n        <span class=\\\"swiper-zoom-container\\\">\\n          <img src=\\\"\").concat(photo.url ? photo.url : photo, \"\\\">\\n        </span>\\n      </div>\\n    \").trim();\n      return photoHtml;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pb = this;\n      if (pb.params.render) return pb.params.render.call(pb, pb.params);\n      var html = \"\\n      <div class=\\\"photo-browser photo-browser-\".concat(pb.params.theme, \"\\\">\\n        <div class=\\\"view\\\">\\n          <div class=\\\"page photo-browser-page photo-browser-page-\").concat(pb.params.theme, \" no-toolbar \").concat(!pb.params.navbar ? 'no-navbar' : '', \"\\\" data-name=\\\"photo-browser-page\\\">\\n            \").concat(pb.params.navbar ? pb.renderNavbar() : '', \"\\n            \").concat(pb.params.toolbar ? pb.renderToolbar() : '', \"\\n            <div class=\\\"photo-browser-captions photo-browser-captions-\").concat(pb.params.captionsTheme || pb.params.theme, \"\\\">\\n              \").concat(pb.params.photos.map(function (photo, index) {\n        if (photo.caption) return pb.renderCaption(photo.caption, index);\n        return '';\n      }).join(' '), \"\\n            </div>\\n            <div class=\\\"photo-browser-swiper-container swiper-container\\\">\\n              <div class=\\\"photo-browser-swiper-wrapper swiper-wrapper\\\">\\n                \").concat(pb.params.virtualSlides ? '' : pb.params.photos.map(function (photo, index) {\n        if (photo.html || (typeof photo === 'string' || photo instanceof String) && photo.indexOf('<') >= 0 && photo.indexOf('>') >= 0) {\n          return pb.renderObject(photo, index);\n        }\n\n        if (pb.params.swiper.lazy === true || pb.params.swiper.lazy && pb.params.swiper.lazy.enabled) {\n          return pb.renderLazyPhoto(photo, index);\n        }\n\n        return pb.renderPhoto(photo, index);\n      }).join(' '), \"\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    \").trim();\n      return html;\n    }\n  }, {\n    key: \"renderStandalone\",\n    value: function renderStandalone() {\n      var pb = this;\n      if (pb.params.renderStandalone) return pb.params.renderStandalone.call(pb);\n      var standaloneHtml = \"<div class=\\\"popup photo-browser-popup photo-browser-standalone popup-tablet-fullscreen\\\">\".concat(pb.render(), \"</div>\");\n      return standaloneHtml;\n    }\n  }, {\n    key: \"renderPage\",\n    value: function renderPage() {\n      var pb = this;\n      if (pb.params.renderPage) return pb.params.renderPage.call(pb);\n      var pageHtml = pb.render();\n      return pageHtml;\n    }\n  }, {\n    key: \"renderPopup\",\n    value: function renderPopup() {\n      var pb = this;\n      if (pb.params.renderPopup) return pb.params.renderPopup.call(pb);\n      var popupHtml = \"<div class=\\\"popup photo-browser-popup\\\">\".concat(pb.render(), \"</div>\");\n      return popupHtml;\n    } // Callbacks\n\n  }, {\n    key: \"onOpen\",\n    value: function onOpen(type, el) {\n      var pb = this;\n      var app = pb.app;\n      var $el = $(el);\n      $el[0].f7PhotoBrowser = pb;\n      pb.$el = $el;\n      pb.el = $el[0];\n      pb.openedIn = type;\n      pb.opened = true;\n      pb.$swiperContainerEl = pb.$el.find('.photo-browser-swiper-container');\n      pb.$swiperWrapperEl = pb.$el.find('.photo-browser-swiper-wrapper');\n      pb.slides = pb.$el.find('.photo-browser-slide');\n      pb.$captionsContainerEl = pb.$el.find('.photo-browser-captions');\n      pb.captions = pb.$el.find('.photo-browser-caption'); // Init Swiper\n\n      var swiperParams = Utils.extend({}, pb.params.swiper, {\n        initialSlide: pb.activeIndex,\n        on: {\n          tap: function tap(e) {\n            pb.emit('local::tap', e);\n          },\n          click: function click(e) {\n            if (pb.params.exposition) {\n              pb.expositionToggle();\n            }\n\n            pb.emit('local::click', e);\n          },\n          doubleTap: function doubleTap(e) {\n            pb.emit('local::doubleTap', e);\n          },\n          slideChange: function slideChange() {\n            var swiper = this;\n            pb.onSlideChange(swiper);\n\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            pb.emit.apply(pb, ['local::slideChange'].concat(args));\n          },\n          transitionStart: function transitionStart() {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            pb.emit.apply(pb, ['local::transitionStart'].concat(args));\n          },\n          transitionEnd: function transitionEnd() {\n            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              args[_key3] = arguments[_key3];\n            }\n\n            pb.emit.apply(pb, ['local::transitionEnd'].concat(args));\n          },\n          slideChangeTransitionStart: function slideChangeTransitionStart() {\n            for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              args[_key4] = arguments[_key4];\n            }\n\n            pb.emit.apply(pb, ['local::slideChangeTransitionStart'].concat(args));\n          },\n          slideChangeTransitionEnd: function slideChangeTransitionEnd() {\n            for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n              args[_key5] = arguments[_key5];\n            }\n\n            pb.emit.apply(pb, ['local::slideChangeTransitionEnd'].concat(args));\n          },\n          lazyImageLoad: function lazyImageLoad() {\n            for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n              args[_key6] = arguments[_key6];\n            }\n\n            pb.emit.apply(pb, ['local::lazyImageLoad'].concat(args));\n          },\n          lazyImageReady: function lazyImageReady() {\n            for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n              args[_key7] = arguments[_key7];\n            }\n\n            var slideEl = args[0];\n            $(slideEl).removeClass('photo-browser-slide-lazy');\n            pb.emit.apply(pb, ['local::lazyImageReady'].concat(args));\n          }\n        }\n      });\n\n      if (pb.params.swipeToClose && pb.params.type !== 'page') {\n        Utils.extend(swiperParams.on, {\n          touchStart: function touchStart(e) {\n            pb.onTouchStart(e);\n            pb.emit('local::touchStart', e);\n          },\n          touchMoveOpposite: function touchMoveOpposite(e) {\n            pb.onTouchMove(e);\n            pb.emit('local::touchMoveOpposite', e);\n          },\n          touchEnd: function touchEnd(e) {\n            pb.onTouchEnd(e);\n            pb.emit('local::touchEnd', e);\n          }\n        });\n      }\n\n      if (pb.params.virtualSlides) {\n        Utils.extend(swiperParams, {\n          virtual: {\n            slides: pb.params.photos,\n            renderSlide: function renderSlide(photo, index) {\n              if (photo.html || (typeof photo === 'string' || photo instanceof String) && photo.indexOf('<') >= 0 && photo.indexOf('>') >= 0) {\n                return pb.renderObject(photo, index);\n              }\n\n              if (pb.params.swiper.lazy === true || pb.params.swiper.lazy && pb.params.swiper.lazy.enabled) {\n                return pb.renderLazyPhoto(photo, index);\n              }\n\n              return pb.renderPhoto(photo, index);\n            }\n          }\n        });\n      }\n\n      pb.swiper = app.swiper.create(pb.$swiperContainerEl, swiperParams);\n\n      if (pb.activeIndex === 0) {\n        pb.onSlideChange(pb.swiper);\n      }\n\n      if (pb.$el) {\n        pb.$el.trigger('photobrowser:open');\n      }\n\n      pb.emit('local::open photoBrowserOpen', pb);\n    }\n  }, {\n    key: \"onOpened\",\n    value: function onOpened() {\n      var pb = this;\n\n      if (pb.$el) {\n        pb.$el.trigger('photobrowser:opened');\n      }\n\n      pb.emit('local::opened photoBrowserOpened', pb);\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      var pb = this;\n      if (pb.destroyed) return; // Destroy Swiper\n\n      if (pb.swiper && pb.swiper.destroy) {\n        pb.swiper.destroy(true, false);\n        pb.swiper = null;\n        delete pb.swiper;\n      }\n\n      if (pb.$el) {\n        pb.$el.trigger('photobrowser:close');\n      }\n\n      pb.emit('local::close photoBrowserClose', pb);\n    }\n  }, {\n    key: \"onClosed\",\n    value: function onClosed() {\n      var pb = this;\n      if (pb.destroyed) return;\n      pb.opened = false;\n      pb.$el = null;\n      pb.el = null;\n      delete pb.$el;\n      delete pb.el;\n\n      if (pb.$el) {\n        pb.$el.trigger('photobrowser:closed');\n      }\n\n      pb.emit('local::closed photoBrowserClosed', pb);\n    } // Open\n\n  }, {\n    key: \"openPage\",\n    value: function openPage() {\n      var pb = this;\n      if (pb.opened) return pb;\n      var pageHtml = pb.renderPage();\n      pb.view.router.navigate({\n        url: pb.url,\n        route: {\n          content: pageHtml,\n          path: pb.url,\n          on: {\n            pageBeforeIn: function pageBeforeIn(e, page) {\n              pb.view.$el.addClass(\"with-photo-browser-page with-photo-browser-page-\".concat(pb.params.theme));\n              pb.onOpen('page', page.el);\n            },\n            pageAfterIn: function pageAfterIn(e, page) {\n              pb.onOpened('page', page.el);\n            },\n            pageBeforeOut: function pageBeforeOut(e, page) {\n              pb.view.$el.removeClass(\"with-photo-browser-page with-photo-browser-page-exposed with-photo-browser-page-\".concat(pb.params.theme));\n              pb.onClose('page', page.el);\n            },\n            pageAfterOut: function pageAfterOut(e, page) {\n              pb.onClosed('page', page.el);\n            }\n          }\n        }\n      });\n      return pb;\n    }\n  }, {\n    key: \"openStandalone\",\n    value: function openStandalone() {\n      var pb = this;\n      if (pb.opened) return pb;\n      var standaloneHtml = pb.renderStandalone();\n      var popupParams = {\n        backdrop: false,\n        content: standaloneHtml,\n        on: {\n          popupOpen: function popupOpen(popup) {\n            pb.onOpen('popup', popup.el);\n          },\n          popupOpened: function popupOpened(popup) {\n            pb.onOpened('popup', popup.el);\n          },\n          popupClose: function popupClose(popup) {\n            pb.onClose('popup', popup.el);\n          },\n          popupClosed: function popupClosed(popup) {\n            pb.onClosed('popup', popup.el);\n          }\n        }\n      };\n\n      if (pb.params.routableModals) {\n        pb.view.router.navigate({\n          url: pb.url,\n          route: {\n            path: pb.url,\n            popup: popupParams\n          }\n        });\n      } else {\n        pb.modal = pb.app.popup.create(popupParams).open();\n      }\n\n      return pb;\n    }\n  }, {\n    key: \"openPopup\",\n    value: function openPopup() {\n      var pb = this;\n      if (pb.opened) return pb;\n      var popupHtml = pb.renderPopup();\n      var popupParams = {\n        content: popupHtml,\n        on: {\n          popupOpen: function popupOpen(popup) {\n            pb.onOpen('popup', popup.el);\n          },\n          popupOpened: function popupOpened(popup) {\n            pb.onOpened('popup', popup.el);\n          },\n          popupClose: function popupClose(popup) {\n            pb.onClose('popup', popup.el);\n          },\n          popupClosed: function popupClosed(popup) {\n            pb.onClosed('popup', popup.el);\n          }\n        }\n      };\n\n      if (pb.params.routableModals) {\n        pb.view.router.navigate({\n          url: pb.url,\n          route: {\n            path: pb.url,\n            popup: popupParams\n          }\n        });\n      } else {\n        pb.modal = pb.app.popup.create(popupParams).open();\n      }\n\n      return pb;\n    } // Exposition\n\n  }, {\n    key: \"expositionEnable\",\n    value: function expositionEnable() {\n      var pb = this;\n\n      if (pb.params.type === 'page') {\n        pb.view.$el.addClass('with-photo-browser-page-exposed');\n      }\n\n      if (pb.$el) pb.$el.addClass('photo-browser-exposed');\n      if (pb.params.expositionHideCaptions) pb.$captionsContainerEl.addClass('photo-browser-captions-exposed');\n      pb.exposed = true;\n      return pb;\n    }\n  }, {\n    key: \"expositionDisable\",\n    value: function expositionDisable() {\n      var pb = this;\n\n      if (pb.params.type === 'page') {\n        pb.view.$el.removeClass('with-photo-browser-page-exposed');\n      }\n\n      if (pb.$el) pb.$el.removeClass('photo-browser-exposed');\n      if (pb.params.expositionHideCaptions) pb.$captionsContainerEl.removeClass('photo-browser-captions-exposed');\n      pb.exposed = false;\n      return pb;\n    }\n  }, {\n    key: \"expositionToggle\",\n    value: function expositionToggle() {\n      var pb = this;\n\n      if (pb.params.type === 'page') {\n        pb.view.$el.toggleClass('with-photo-browser-page-exposed');\n      }\n\n      if (pb.$el) pb.$el.toggleClass('photo-browser-exposed');\n      if (pb.params.expositionHideCaptions) pb.$captionsContainerEl.toggleClass('photo-browser-captions-exposed');\n      pb.exposed = !pb.exposed;\n      return pb;\n    }\n  }, {\n    key: \"open\",\n    value: function open(index) {\n      var pb = this;\n      var type = pb.params.type;\n\n      if (pb.opened) {\n        if (pb.swiper && typeof index !== 'undefined') {\n          pb.swiper.slideTo(parseInt(index, 10));\n        }\n\n        return pb;\n      }\n\n      if (typeof index !== 'undefined') {\n        pb.activeIndex = index;\n      }\n\n      if (type === 'standalone') {\n        pb.openStandalone();\n      }\n\n      if (type === 'page') {\n        pb.openPage();\n      }\n\n      if (type === 'popup') {\n        pb.openPopup();\n      }\n\n      return pb;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var pb = this;\n      if (!pb.opened) return pb;\n\n      if (pb.params.routableModals || pb.openedIn === 'page') {\n        if (pb.view) pb.view.router.back();\n      } else {\n        pb.modal.once('modalClosed', function () {\n          Utils.nextTick(function () {\n            pb.modal.destroy();\n            delete pb.modal;\n          });\n        });\n        pb.modal.close();\n      }\n\n      return pb;\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var pb = this;\n      pb.emit('local::beforeDestroy photoBrowserBeforeDestroy', pb);\n\n      if (pb.$el) {\n        pb.$el.trigger('photobrowser:beforedestroy');\n        pb.$el[0].f7PhotoBrowser = null;\n        delete pb.$el[0].f7PhotoBrowser;\n      }\n\n      Utils.deleteProps(pb);\n      pb = null;\n    }\n  }]);\n\n  return PhotoBrowser;\n}(Framework7Class);\n\nexport default PhotoBrowser;","map":null,"metadata":{},"sourceType":"module"}
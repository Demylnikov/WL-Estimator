{"ast":null,"code":"import $ from 'dom7';\nimport Messages from './messages-class';\nimport ConstructorMethods from '../../utils/constructor-methods';\nexport default {\n  name: 'messages',\n  static: {\n    Messages: Messages\n  },\n  create: function create() {\n    var app = this;\n    app.messages = ConstructorMethods({\n      defaultSelector: '.messages',\n      constructor: Messages,\n      app: app,\n      domProp: 'f7Messages',\n      addMethods: 'renderMessages layout scroll clear removeMessage removeMessages addMessage addMessages'.split(' ')\n    });\n  },\n  on: {\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      var app = this;\n      $(tabEl).find('.messages-init').each(function (index, messagesEl) {\n        app.messages.destroy(messagesEl);\n      });\n    },\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      $(tabEl).find('.messages-init').each(function (index, messagesEl) {\n        app.messages.create({\n          el: messagesEl\n        });\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      var app = this;\n      page.$el.find('.messages-init').each(function (index, messagesEl) {\n        app.messages.destroy(messagesEl);\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.messages-init').each(function (index, messagesEl) {\n        app.messages.create({\n          el: messagesEl\n        });\n      });\n    }\n  },\n  vnode: {\n    'messages-init': {\n      insert: function insert(vnode) {\n        var app = this;\n        var messagesEl = vnode.elm;\n        app.messages.create({\n          el: messagesEl\n        });\n      },\n      destroy: function destroy(vnode) {\n        var app = this;\n        var messagesEl = vnode.elm;\n        app.messages.destroy(messagesEl);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Framework7Class from '../../utils/class';\n\nvar ListIndex =\n/*#__PURE__*/\nfunction (_Framework7Class) {\n  _inherits(ListIndex, _Framework7Class);\n\n  function ListIndex(app) {\n    var _this;\n\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ListIndex);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListIndex).call(this, params, [app]));\n\n    var index = _assertThisInitialized(_assertThisInitialized(_this));\n\n    var defaults = {\n      el: null,\n      // where to render indexes\n      listEl: null,\n      // list el to generate indexes\n      indexes: 'auto',\n      // or array of indexes\n      iosItemHeight: 14,\n      mdItemHeight: 14,\n      scrollList: true,\n      label: false,\n      // eslint-disable-next-line\n      renderItem: function renderItem(itemContent, itemIndex) {\n        return \"\\n          <li>\".concat(itemContent, \"</li>\\n        \").trim();\n      },\n      renderSkipPlaceholder: function renderSkipPlaceholder() {\n        return '<li class=\"list-index-skip-placeholder\"></li>';\n      },\n      on: {}\n    }; // Extend defaults with modules params\n\n    index.useModulesParams(defaults);\n    index.params = Utils.extend(defaults, params);\n    var $el;\n    var $listEl;\n    var $pageContentEl;\n    var $ul;\n\n    if (index.params.el) {\n      $el = $(index.params.el);\n    } else {\n      return _possibleConstructorReturn(_this, index);\n    }\n\n    if ($el[0].f7ListIndex) {\n      return _possibleConstructorReturn(_this, $el[0].f7ListIndex);\n    }\n\n    $ul = $el.find('ul');\n\n    if ($ul.length === 0) {\n      $ul = $('<ul></ul>');\n      $el.append($ul);\n    }\n\n    if (index.params.listEl) {\n      $listEl = $(index.params.listEl);\n    }\n\n    if (index.params.indexes === 'auto' && !$listEl) {\n      return _possibleConstructorReturn(_this, index);\n    }\n\n    if ($listEl) {\n      $pageContentEl = $listEl.parents('.page-content').eq(0);\n    } else {\n      $pageContentEl = $el.siblings('.page-content').eq(0);\n\n      if ($pageContentEl.length === 0) {\n        $pageContentEl = $el.parents('.page').eq(0).find('.page-content').eq(0);\n      }\n    }\n\n    $el[0].f7ListIndex = index;\n    Utils.extend(index, {\n      app: app,\n      $el: $el,\n      el: $el && $el[0],\n      $ul: $ul,\n      ul: $ul && $ul[0],\n      $listEl: $listEl,\n      listEl: $listEl && $listEl[0],\n      $pageContentEl: $pageContentEl,\n      pageContentEl: $pageContentEl && $pageContentEl[0],\n      indexes: params.indexes,\n      height: 0,\n      skipRate: 0\n    }); // Install Modules\n\n    index.useModules(); // Attach events\n\n    function handleResize() {\n      var height = {\n        index: index\n      };\n      index.calcSize();\n\n      if (height !== index.height) {\n        index.render();\n      }\n    }\n\n    function handleClick(e) {\n      var $clickedLi = $(e.target).closest('li');\n      if (!$clickedLi.length) return;\n      var itemIndex = $clickedLi.index();\n\n      if (index.skipRate > 0) {\n        var percentage = itemIndex / ($clickedLi.siblings('li').length - 1);\n        itemIndex = Math.round((index.indexes.length - 1) * percentage);\n      }\n\n      var itemContent = index.indexes[itemIndex];\n      index.$el.trigger('listindex:click', itemContent, itemIndex);\n      index.emit('local::click listIndexClick', index, itemContent, itemIndex);\n      index.$el.trigger('listindex:select', itemContent, itemIndex);\n      index.emit('local::select listIndexSelect', index, itemContent, itemIndex);\n\n      if (index.$listEl && index.params.scrollList) {\n        index.scrollListToIndex(itemContent, itemIndex);\n      }\n    }\n\n    var touchesStart = {};\n    var isTouched;\n    var isMoved;\n    var topPoint;\n    var bottomPoint;\n    var $labelEl;\n    var previousIndex = null;\n\n    function handleTouchStart(e) {\n      var $children = $ul.children();\n      if (!$children.length) return;\n      topPoint = $children[0].getBoundingClientRect().top;\n      bottomPoint = $children[$children.length - 1].getBoundingClientRect().top + $children[0].offsetHeight;\n      touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      isTouched = true;\n      isMoved = false;\n      previousIndex = null;\n    }\n\n    function handleTouchMove(e) {\n      if (!isTouched) return;\n\n      if (!isMoved && index.params.label) {\n        $labelEl = $('<span class=\"list-index-label\"></span>');\n        $el.append($labelEl);\n      }\n\n      isMoved = true;\n      var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n      e.preventDefault();\n      var percentage = (pageY - topPoint) / (bottomPoint - topPoint);\n      percentage = Math.min(Math.max(percentage, 0), 1);\n      var itemIndex = Math.round((index.indexes.length - 1) * percentage);\n      var itemContent = index.indexes[itemIndex];\n      var ulHeight = bottomPoint - topPoint;\n      var bubbleBottom = (index.height - ulHeight) / 2 + (1 - percentage) * ulHeight;\n\n      if (itemIndex !== previousIndex) {\n        if (index.params.label) {\n          $labelEl.html(itemContent).transform(\"translateY(-\".concat(bubbleBottom, \"px)\"));\n        }\n\n        if (index.$listEl && index.params.scrollList) {\n          index.scrollListToIndex(itemContent, itemIndex);\n        }\n      }\n\n      previousIndex = itemIndex;\n      index.$el.trigger('listindex:select', index);\n      index.emit('local::select listIndexSelect', index, itemContent, itemIndex);\n    }\n\n    function handleTouchEnd() {\n      if (!isTouched) return;\n      isTouched = false;\n      isMoved = false;\n\n      if (index.params.label) {\n        if ($labelEl) $labelEl.remove();\n        $labelEl = undefined;\n      }\n    }\n\n    var passiveListener = app.support.passiveListener ? {\n      passive: true\n    } : false;\n\n    index.attachEvents = function attachEvents() {\n      $el.parents('.tab').on('tab:show', handleResize);\n      $el.parents('.page').on('page:reinit', handleResize);\n      $el.parents('.panel').on('panel:open', handleResize);\n      $el.parents('.sheet-modal, .actions-modal, .popup, .popover, .login-screen, .dialog, .toast').on('modal:open', handleResize);\n      app.on('resize', handleResize);\n      $el.on('click', handleClick);\n      $el.on(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.on('touchmove:active', handleTouchMove);\n      app.on('touchend:passive', handleTouchEnd);\n    };\n\n    index.detachEvents = function attachEvents() {\n      $el.parents('.tab').off('tab:show', handleResize);\n      $el.parents('.page').off('page:reinit', handleResize);\n      $el.parents('.panel').off('panel:open', handleResize);\n      $el.parents('.sheet-modal, .actions-modal, .popup, .popover, .login-screen, .dialog, .toast').off('modal:open', handleResize);\n      app.off('resize', handleResize);\n      $el.off('click', handleClick);\n      $el.off(app.touchEvents.start, handleTouchStart, passiveListener);\n      app.off('touchmove:active', handleTouchMove);\n      app.off('touchend:passive', handleTouchEnd);\n    }; // Init\n\n\n    index.init();\n    return _possibleConstructorReturn(_this, index);\n  } // eslint-disable-next-line\n\n\n  _createClass(ListIndex, [{\n    key: \"scrollListToIndex\",\n    value: function scrollListToIndex(itemContent, itemIndex) {\n      var index = this;\n      var $listEl = index.$listEl,\n          $pageContentEl = index.$pageContentEl;\n      if (!$listEl || !$pageContentEl || $pageContentEl.length === 0) return index;\n      var $scrollToEl;\n      $listEl.find('.list-group-title, .item-divider').each(function (elIndex, el) {\n        if ($scrollToEl) return;\n        var $el = $(el);\n\n        if ($el.text() === itemContent) {\n          $scrollToEl = $el;\n        }\n      });\n      if (!$scrollToEl || $scrollToEl.length === 0) return index;\n      var parentTop = $scrollToEl.parent().offset().top;\n      var paddingTop = parseInt($pageContentEl.css('padding-top'), 10);\n      var scrollTop = $pageContentEl[0].scrollTop;\n      var scrollToElTop = $scrollToEl.offset().top;\n\n      if (parentTop <= paddingTop) {\n        $pageContentEl.scrollTop(parentTop + scrollTop - paddingTop);\n      } else {\n        $pageContentEl.scrollTop(scrollToElTop + scrollTop - paddingTop);\n      }\n\n      return index;\n    }\n  }, {\n    key: \"renderSkipPlaceholder\",\n    value: function renderSkipPlaceholder() {\n      var index = this;\n      return index.params.renderSkipPlaceholder.call(index);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(itemContent, itemIndex) {\n      var index = this;\n      return index.params.renderItem.call(index, itemContent, itemIndex);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var index = this;\n      var $ul = index.$ul,\n          indexes = index.indexes,\n          skipRate = index.skipRate;\n      var wasSkipped;\n      var html = indexes.map(function (itemContent, itemIndex) {\n        if (itemIndex % skipRate !== 0 && skipRate > 0) {\n          wasSkipped = true;\n          return '';\n        }\n\n        var itemHtml = index.renderItem(itemContent, itemIndex);\n\n        if (wasSkipped) {\n          itemHtml = index.renderSkipPlaceholder() + itemHtml;\n        }\n\n        wasSkipped = false;\n        return itemHtml;\n      }).join('');\n      $ul.html(html);\n      return index;\n    }\n  }, {\n    key: \"calcSize\",\n    value: function calcSize() {\n      var index = this;\n      var app = index.app,\n          params = index.params,\n          el = index.el,\n          indexes = index.indexes;\n      var height = el.offsetHeight;\n      var itemHeight = app.theme === 'ios' ? params.iosItemHeight : params.mdItemHeight;\n      var maxItems = Math.floor(height / itemHeight);\n      var items = indexes.length;\n      var skipRate = 0;\n\n      if (items > maxItems) {\n        skipRate = Math.ceil((items * 2 - 1) / maxItems);\n      }\n\n      index.height = height;\n      index.skipRate = skipRate;\n      return index;\n    }\n  }, {\n    key: \"calcIndexes\",\n    value: function calcIndexes() {\n      var index = this;\n\n      if (index.params.indexes === 'auto') {\n        index.indexes = [];\n        index.$listEl.find('.list-group-title, .item-divider').each(function (elIndex, el) {\n          var elContent = $(el).text();\n\n          if (index.indexes.indexOf(elContent) < 0) {\n            index.indexes.push(elContent);\n          }\n        });\n      } else {\n        index.indexes = index.params.indexes;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var index = this;\n      index.calcIndexes();\n      index.calcSize();\n      index.render();\n      return index;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var index = this;\n      index.calcIndexes();\n      index.calcSize();\n      index.render();\n      index.attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var index = this;\n      index.$el.trigger('listindex:beforedestroy', index);\n      index.emit('local::beforeDestroy listIndexBeforeDestroy', index);\n      index.detachEvents();\n\n      if (index.$el[0]) {\n        index.$el[0].f7ListIndex = null;\n        delete index.$el[0].f7ListIndex;\n      }\n\n      Utils.deleteProps(index);\n      index = null;\n    }\n  }]);\n\n  return ListIndex;\n}(Framework7Class);\n\nexport default ListIndex;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Range from './range-class';\nimport ConstructorMethods from '../../utils/constructor-methods';\nexport default {\n  name: 'range',\n  create: function create() {\n    var app = this;\n    app.range = Utils.extend(ConstructorMethods({\n      defaultSelector: '.range-slider',\n      constructor: Range,\n      app: app,\n      domProp: 'f7Range'\n    }), {\n      getValue: function getValue() {\n        var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.range-slider';\n        var range = app.range.get(el);\n        if (range) return range.getValue();\n        return undefined;\n      },\n      setValue: function setValue() {\n        var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.range-slider';\n        var value = arguments.length > 1 ? arguments[1] : undefined;\n        var range = app.range.get(el);\n        if (range) return range.setValue(value);\n        return undefined;\n      }\n    });\n  },\n  static: {\n    Range: Range\n  },\n  on: {\n    tabMounted: function tabMounted(tabEl) {\n      var app = this;\n      $(tabEl).find('.range-slider-init').each(function (index, rangeEl) {\n        return new Range(app, {\n          el: rangeEl\n        });\n      });\n    },\n    tabBeforeRemove: function tabBeforeRemove(tabEl) {\n      $(tabEl).find('.range-slider-init').each(function (index, rangeEl) {\n        if (rangeEl.f7Range) rangeEl.f7Range.destroy();\n      });\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.range-slider-init').each(function (index, rangeEl) {\n        return new Range(app, {\n          el: rangeEl\n        });\n      });\n    },\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      page.$el.find('.range-slider-init').each(function (index, rangeEl) {\n        if (rangeEl.f7Range) rangeEl.f7Range.destroy();\n      });\n    }\n  },\n  vnode: {\n    'range-slider-init': {\n      insert: function insert(vnode) {\n        var rangeEl = vnode.elm;\n        var app = this;\n        app.range.create({\n          el: rangeEl\n        });\n      },\n      destroy: function destroy(vnode) {\n        var rangeEl = vnode.elm;\n        if (rangeEl.f7Range) rangeEl.f7Range.destroy();\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
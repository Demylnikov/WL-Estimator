{"ast":null,"code":"import $ from 'dom7';\nimport Utils from '../../utils/utils';\nvar Tab = {\n  show: function show() {\n    var app = this;\n    var tabEl;\n    var tabLinkEl;\n    var animate;\n    var tabRoute;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1 && args[0].constructor === Object) {\n      tabEl = args[0].tabEl;\n      tabLinkEl = args[0].tabLinkEl;\n      animate = args[0].animate;\n      tabRoute = args[0].tabRoute;\n    } else {\n      tabEl = args[0];\n      tabLinkEl = args[1];\n      animate = args[2];\n      tabRoute = args[3];\n\n      if (typeof args[1] === 'boolean') {\n        tabEl = args[0];\n        animate = args[1];\n        tabLinkEl = args[2];\n        tabRoute = args[3];\n\n        if (args.length > 2 && tabLinkEl.constructor === Object) {\n          tabEl = args[0];\n          animate = args[1];\n          tabRoute = args[2];\n          tabLinkEl = args[3];\n        }\n      }\n    }\n\n    if (typeof animate === 'undefined') animate = true;\n    var $newTabEl = $(tabEl);\n\n    if (tabRoute && $newTabEl[0]) {\n      $newTabEl[0].f7TabRoute = tabRoute;\n    }\n\n    if ($newTabEl.length === 0 || $newTabEl.hasClass('tab-active')) {\n      return {\n        $newTabEl: $newTabEl,\n        newTabEl: $newTabEl[0]\n      };\n    }\n\n    var $tabLinkEl;\n    if (tabLinkEl) $tabLinkEl = $(tabLinkEl);\n    var $tabsEl = $newTabEl.parent('.tabs');\n\n    if ($tabsEl.length === 0) {\n      return {\n        $newTabEl: $newTabEl,\n        newTabEl: $newTabEl[0]\n      };\n    } // Release swipeouts in hidden tabs\n\n\n    if (app.swipeout) app.swipeout.allowOpen = true; // Animated tabs\n\n    var tabsChangedCallbacks = [];\n\n    function onTabsChanged(callback) {\n      tabsChangedCallbacks.push(callback);\n    }\n\n    function tabsChanged() {\n      tabsChangedCallbacks.forEach(function (callback) {\n        callback();\n      });\n    }\n\n    var animated = false;\n\n    if ($tabsEl.parent().hasClass('tabs-animated-wrap')) {\n      $tabsEl.parent()[animate ? 'removeClass' : 'addClass']('not-animated');\n      var transitionDuration = parseFloat($tabsEl.css('transition-duration').replace(',', '.'));\n\n      if (animate && transitionDuration) {\n        $tabsEl.transitionEnd(tabsChanged);\n        animated = true;\n      }\n\n      var tabsTranslate = (app.rtl ? $newTabEl.index() : -$newTabEl.index()) * 100;\n      $tabsEl.transform(\"translate3d(\".concat(tabsTranslate, \"%,0,0)\"));\n    } // Swipeable tabs\n\n\n    var swiper;\n\n    if ($tabsEl.parent().hasClass('tabs-swipeable-wrap') && app.swiper) {\n      swiper = $tabsEl.parent()[0].swiper;\n\n      if (swiper && swiper.activeIndex !== $newTabEl.index()) {\n        animated = true;\n        swiper.once('slideChangeTransitionEnd', function () {\n          tabsChanged();\n        }).slideTo($newTabEl.index(), animate ? undefined : 0);\n      } else if (swiper && swiper.animating) {\n        animated = true;\n        swiper.once('slideChangeTransitionEnd', function () {\n          tabsChanged();\n        });\n      }\n    } // Remove active class from old tabs\n\n\n    var $oldTabEl = $tabsEl.children('.tab-active');\n    $oldTabEl.removeClass('tab-active');\n\n    if (!swiper || swiper && !swiper.animating || swiper && tabRoute) {\n      $oldTabEl.trigger('tab:hide');\n      app.emit('tabHide', $oldTabEl[0]);\n    } // Trigger 'show' event on new tab\n\n\n    $newTabEl.addClass('tab-active');\n\n    if (!swiper || swiper && !swiper.animating || swiper && tabRoute) {\n      $newTabEl.trigger('tab:show');\n      app.emit('tabShow', $newTabEl[0]);\n    } // Find related link for new tab\n\n\n    if (!$tabLinkEl) {\n      // Search by id\n      if (typeof tabEl === 'string') $tabLinkEl = $(\".tab-link[href=\\\"\".concat(tabEl, \"\\\"]\"));else $tabLinkEl = $(\".tab-link[href=\\\"#\".concat($newTabEl.attr('id'), \"\\\"]\")); // Search by data-tab\n\n      if (!$tabLinkEl || $tabLinkEl && $tabLinkEl.length === 0) {\n        $('[data-tab]').each(function (index, el) {\n          if ($newTabEl.is($(el).attr('data-tab'))) $tabLinkEl = $(el);\n        });\n      }\n\n      if (tabRoute && (!$tabLinkEl || $tabLinkEl && $tabLinkEl.length === 0)) {\n        $tabLinkEl = $(\"[data-route-tab-id=\\\"\".concat(tabRoute.route.tab.id, \"\\\"]\"));\n\n        if ($tabLinkEl.length === 0) {\n          $tabLinkEl = $(\".tab-link[href=\\\"\".concat(tabRoute.url, \"\\\"]\"));\n        }\n      }\n\n      if ($tabLinkEl.length > 1 && $newTabEl.parents('.page').length) {\n        // eslint-disable-next-line\n        $tabLinkEl = $tabLinkEl.filter(function (index, tabLinkElement) {\n          return $(tabLinkElement).parents('.page')[0] === $newTabEl.parents('.page')[0];\n        });\n\n        if (app.theme === 'ios' && $tabLinkEl.length === 0 && tabRoute) {\n          var $pageEl = $newTabEl.parents('.page');\n          var $navbarEl = $(app.navbar.getElByPage($pageEl));\n          $tabLinkEl = $navbarEl.find(\"[data-route-tab-id=\\\"\".concat(tabRoute.route.tab.id, \"\\\"]\"));\n\n          if ($tabLinkEl.length === 0) {\n            $tabLinkEl = $navbarEl.find(\".tab-link[href=\\\"\".concat(tabRoute.url, \"\\\"]\"));\n          }\n        }\n      }\n    }\n\n    if ($tabLinkEl.length > 0) {\n      // Find related link for old tab\n      var $oldTabLinkEl;\n\n      if ($oldTabEl && $oldTabEl.length > 0) {\n        // Search by id\n        var oldTabId = $oldTabEl.attr('id');\n\n        if (oldTabId) {\n          $oldTabLinkEl = $(\".tab-link[href=\\\"#\".concat(oldTabId, \"\\\"]\")); // Search by data-route-tab-id\n\n          if (!$oldTabLinkEl || $oldTabLinkEl && $oldTabLinkEl.length === 0) {\n            $oldTabLinkEl = $(\".tab-link[data-route-tab-id=\\\"\".concat(oldTabId, \"\\\"]\"));\n          }\n        } // Search by data-tab\n\n\n        if (!$oldTabLinkEl || $oldTabLinkEl && $oldTabLinkEl.length === 0) {\n          $('[data-tab]').each(function (index, tabLinkElement) {\n            if ($oldTabEl.is($(tabLinkElement).attr('data-tab'))) $oldTabLinkEl = $(tabLinkElement);\n          });\n        }\n\n        if (!$oldTabLinkEl || $oldTabLinkEl && $oldTabLinkEl.length === 0) {\n          $oldTabLinkEl = $tabLinkEl.siblings('.tab-link-active');\n        }\n      } else if (tabRoute) {\n        $oldTabLinkEl = $tabLinkEl.siblings('.tab-link-active');\n      }\n\n      if ($oldTabLinkEl && $oldTabLinkEl.length > 1 && $oldTabEl && $oldTabEl.parents('.page').length) {\n        // eslint-disable-next-line\n        $oldTabLinkEl = $oldTabLinkEl.filter(function (index, tabLinkElement) {\n          return $(tabLinkElement).parents('.page')[0] === $oldTabEl.parents('.page')[0];\n        });\n      }\n\n      if ($oldTabLinkEl && $oldTabLinkEl.length > 0) $oldTabLinkEl.removeClass('tab-link-active'); // Update links' classes\n\n      if ($tabLinkEl && $tabLinkEl.length > 0) {\n        $tabLinkEl.addClass('tab-link-active'); // Material Highlight\n\n        if (app.theme === 'md' && app.toolbar) {\n          var $tabbarEl = $tabLinkEl.parents('.tabbar, .tabbar-labels');\n\n          if ($tabbarEl.length > 0) {\n            app.toolbar.setHighlight($tabbarEl);\n          }\n        }\n      }\n    }\n\n    return {\n      $newTabEl: $newTabEl,\n      newTabEl: $newTabEl[0],\n      $oldTabEl: $oldTabEl,\n      oldTabEl: $oldTabEl[0],\n      onTabsChanged: onTabsChanged,\n      animated: animated\n    };\n  }\n};\nexport default {\n  name: 'tabs',\n  create: function create() {\n    var app = this;\n    Utils.extend(app, {\n      tab: {\n        show: Tab.show.bind(app)\n      }\n    });\n  },\n  clicks: {\n    '.tab-link': function tabLinkClick($clickedEl) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var app = this;\n\n      if ($clickedEl.attr('href') && $clickedEl.attr('href').indexOf('#') === 0 || $clickedEl.attr('data-tab')) {\n        app.tab.show({\n          tabEl: data.tab || $clickedEl.attr('href'),\n          tabLinkEl: $clickedEl,\n          animate: data.animate\n        });\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/denismylnikov/Projects/wlapp/src/components/pages/HomePage.jsx\";\nimport React, { Component } from 'react';\nimport { Page, Navbar, NavLeft, NavTitle, NavRight, Link, Toolbar, Block, BlockTitle, List, ListItem, ListInput, Row, Col, Button } from 'framework7-react';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      weight: 100,\n      age: 28,\n      height: 180,\n      goal: 80,\n      intake: 2000\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearInput = _this.clearInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.calculate = _this.calculate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.calculateWeightLoss = _this.calculateWeightLoss.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addDays = _this.addDays.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.calculateTDEE = _this.calculateTDEE.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.parseMonth = _this.parseMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkValues = _this.checkValues.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.persist();\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"clearInput\",\n    value: function clearInput(event) {\n      this.setState(_defineProperty({}, event.target.name, \"\"));\n    }\n  }, {\n    key: \"calculate\",\n    value: function calculate() {\n      //do input checks first\n      this.calculateWeightLoss();\n    } //Adds specified number of days to current date\n\n  }, {\n    key: \"addDays\",\n    value: function addDays(date, days) {\n      return new Date(date.setTime(date.getTime() + days * 86400000));\n    }\n  }, {\n    key: \"doChecks\",\n    value: function doChecks() {}\n  }, {\n    key: \"calculateTDEE\",\n    value: function calculateTDEE(weight, height, age) {\n      var bmr = 0; // check if gender is female\n\n      if (this.state.gender == 0) {\n        bmr = 10 * weight + 6.25 * height - 5 * age - 161;\n      } else {\n        bmr = 10 * weight + 6.25 * height - 5 * age + 5;\n      }\n\n      switch (parseInt(this.state.activityLevel)) {\n        case 1:\n          return parseInt(bmr * 1.20);\n\n        case 2:\n          return parseInt(bmr * 1.375);\n\n        case 3:\n          return parseInt(bmr * 1.550);\n\n        case 4:\n          return parseInt(bmr * 1.725);\n\n        case 5:\n          return parseInt(bmr * 1.900);\n\n        default:\n          return parseInt(bmr * 1.20);\n      }\n    }\n  }, {\n    key: \"parseMonth\",\n    value: function parseMonth(month) {\n      switch (month) {\n        case 0:\n          return \"Jan\";\n\n        case 1:\n          return \"Feb\";\n\n        case 2:\n          return \"Mar\";\n\n        case 3:\n          return \"Apr\";\n\n        case 4:\n          return \"May\";\n\n        case 5:\n          return \"Jun\";\n\n        case 6:\n          return \"Jul\";\n\n        case 7:\n          return \"Aug\";\n\n        case 8:\n          return \"Sep\";\n\n        case 9:\n          return \"Oct\";\n\n        case 10:\n          return \"Nov\";\n\n        case 11:\n          return \"Dec\";\n\n        default:\n          return \"N/A\";\n      }\n    } //checks input and throws errors in case some values are inadequate\n\n  }, {\n    key: \"checkValues\",\n    value: function checkValues() {\n      if (this.state.weight < 40 || this.state.weight > 600) {\n        this.setState({\n          errorMessage: \"Weight must be between 40 and 600.\"\n        });\n        return false;\n      }\n\n      if (this.state.weight == null || this.state.weight == \"\" || isNaN(this.state.weight)) {\n        this.setState({\n          errorMessage: \"Weight input cannot be empty!\"\n        });\n        return false;\n      }\n\n      if (this.state.age == null || this.state.age == \"\" || isNaN(this.state.age)) {\n        this.setState({\n          errorMessage: \"Age input cannot be empty!\"\n        });\n        return false;\n      }\n\n      if (this.state.age < 10 || this.state.age > 110) {\n        this.setState({\n          errorMessage: \"Age must be between 10 and 110.\"\n        });\n        return false;\n      }\n\n      if (this.state.height == null || this.state.height == \"\" || isNaN(this.state.height)) {\n        this.setState({\n          errorMessage: \"Height cannot be empty.\"\n        });\n        return false;\n      }\n\n      if (this.state.height < 100 || this.state.height > 250) {\n        this.setState({\n          errorMessage: \"Height must be between 100 and 250.\"\n        });\n        return false;\n      }\n\n      if (this.state.goal > this.state.weight) {\n        this.setState({\n          errorMessage: \"Goal weight must be lower than current weight.\"\n        });\n        return false;\n      } //there needs to be a functionality that calculates goal weight based on BMI if field is left empty\n\n\n      if (this.state.goal == null || this.state.goal == \"\" || isNaN(this.state.goal)) {\n        this.setState({\n          errorMessage: \"Goal weight cannot be empty.\"\n        });\n        return false;\n      }\n\n      if (this.state.goal < 30 || this.state.goal > 500) {\n        this.setState({\n          errorMessage: \"Goal weight must be between 30 and 500.\"\n        });\n        return false;\n      }\n\n      if (this.state.intake < 1000) {\n        this.setState({\n          errorMessage: \"Calorie intake of less than 1000 is very unhealthy, please don't do it.\"\n        });\n        return false;\n      }\n\n      if (this.state.intake > 15000) {\n        this.setState({\n          errorMessage: \"Calorie intake can't be higher than 15000.\"\n        });\n        return false;\n      }\n\n      if (this.state.intake == null || this.state.intake == \"\" || isNaN(this.state.intake)) {\n        this.setState({\n          errorMessage: \"Calorie intake can't be empty!\"\n        });\n        return false;\n      }\n\n      if (this.calculateTDEE(this.state.weight, this.state.height, this.state.age) < this.state.intake) {\n        this.setState({\n          errorMessage: \"Your calorie intake is too high to lose weight. Reduce intake or increase excersise.\"\n        });\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"calculateWeightLoss\",\n    value: function calculateWeightLoss() {\n      var labels = [];\n      var data = [];\n      var tableData = [];\n      var date = new Date();\n      var finishDate = new Date();\n      var goalAchieved = false;\n      var iterations = 0;\n      var weight = parseFloat(this.state.weight);\n      var age = parseFloat(this.state.age); // put first label and data before calculating\n\n      labels.push(this.parseMonth(date.getMonth()) + \" '\" + date.getFullYear().toString().slice(2));\n      data.push(weight.toFixed(1));\n\n      if (!this.checkValues()) {\n        this.openCustomDialog(this.state.errorMessage);\n      } // first make sure that TDEE is higher than intake\n\n\n      if (this.calculateTDEE(weight, this.state.height, age) > this.state.intake && this.checkValues()) {\n        while (parseFloat(weight) >= parseFloat(this.state.goal - 3)) {\n          // calculate caloric deficit by subtracting intake from TDEE\n          var deficit = this.calculateTDEE(weight, this.state.height, age) - this.state.intake; // calculate deficit in KG by dividing calories/7700\n\n          var kgDeficit = deficit / 7700; // set new weight after subtracting deficit\n\n          weight = weight - kgDeficit; // add a day?\n\n          date = this.addDays(date, 1); // set age one day higher\n\n          age = age + 1 / 365;\n          iterations++; //on the 14th day of each month add data to arrays that will be displayed on chart\n\n          if (date.getDate() == 14) {\n            labels.push(this.parseMonth(date.getMonth()) + \" '\" + date.getFullYear().toString().slice(2));\n            data.push(weight.toFixed(1));\n            tableData.push({\n              label: this.parseMonth(date.getMonth()) + \" \" + date.getFullYear(),\n              data: weight.toFixed(1)\n            });\n          }\n\n          if (parseFloat(weight) < parseFloat(this.state.goal) && !goalAchieved) {\n            goalAchieved = true;\n            finishDate = date;\n          }\n        }\n\n        if (parseFloat(weight) < parseFloat(this.state.goal - 3)) {\n          console.log(\"CALCULATION ENDED\", iterations);\n          console.log(\"FINISH DATE\", finishDate);\n          this.$f7router.navigate('/results/', {\n            props: {\n              data: this.generateData(labels, data),\n              finishDate: finishDate,\n              tableData: tableData\n            }\n          });\n        }\n      } else {// show warning that TDEE is lower than intake\n      }\n    }\n  }, {\n    key: \"generateData\",\n    value: function generateData(labels, data) {\n      // generate fake data for second dataset\n      var fakeGoalData = [];\n      data.map(function () {\n        return fakeGoalData.push(80);\n      });\n      return {\n        labels: labels,\n        datasets: [{\n          label: 'Weight',\n          data: data,\n          backgroundColor: ['rgba(255,59,48,0.5)'],\n          borderColor: ['#ff3b30'],\n          borderWidth: 2,\n          pointRadius: 0,\n          pointHitRadius: 20,\n          cubicInterpolationMode: 'default'\n        }, {\n          label: 'Goal',\n          data: fakeGoalData,\n          fill: false,\n          borderColor: ['rgba(0,0,0,1)'],\n          borderWidth: 1,\n          borderDash: [10],\n          pointRadius: 0,\n          pointHitRadius: 20,\n          cubicInterpolationMode: 'default'\n        }]\n      };\n    }\n  }, {\n    key: \"openCustomDialog\",\n    value: function openCustomDialog(message) {\n      var self = this;\n      self.$f7.dialog.alert(message, \"Error\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Page, {\n        colorTheme: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        colorTheme: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(NavTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Weight loss estimator\")), React.createElement(BlockTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Your stats\"), React.createElement(List, {\n        inset: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(ListInput, {\n        label: \"Current weight (kg)\",\n        type: \"number\",\n        placeholder: \"105 kg\",\n        name: \"weight\",\n        onChange: this.handleChange,\n        value: this.state.weight,\n        onInputClear: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(ListInput, {\n        label: \"Age\",\n        type: \"number\",\n        placeholder: \"29\",\n        name: \"age\",\n        onChange: this.handleChange,\n        value: this.state.age,\n        onInputClear: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(ListInput, {\n        label: \"Height (cm)\",\n        type: \"number\",\n        placeholder: \"179\",\n        name: \"height\",\n        onChange: this.handleChange,\n        value: this.state.height,\n        onInputClear: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(ListInput, {\n        label: \"Goal weight (kg)\",\n        type: \"number\",\n        placeholder: \"80\",\n        name: \"goal\",\n        onChange: this.handleChange,\n        value: this.state.goal,\n        onInputClear: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), React.createElement(ListInput, {\n        label: \"Daily intake (kcal)\",\n        type: \"number\",\n        placeholder: \"2100\",\n        name: \"intake\",\n        onChange: this.handleChange,\n        value: this.state.intake,\n        onInputClear: this.clearInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(ListInput, {\n        label: \"Gender\",\n        type: \"select\",\n        defaultValue: \"1\",\n        placeholder: \"Please choose...\",\n        name: \"gender\",\n        onChange: this.handleChange,\n        value: this.state.gender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Male\"), React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Female\")), React.createElement(ListItem, {\n        title: \"Activity level\",\n        smartSelect: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"activityLevel\",\n        defaultValue: \"1\",\n        onChange: this.handleChange,\n        value: this.state.activityLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Couch potato\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"Light activity\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Moderate activity\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Heavy activity\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Athlete\")))), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fill: true,\n        round: true,\n        large: true,\n        onClick: this.calculate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Calculate\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Button, {\n        href: \"/about/\",\n        style: {\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"About\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.openCustomDialog.bind(this),\n        style: {\n          marginTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"About\")))));\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/denismylnikov/Projects/wlapp/src/components/pages/HomePage.jsx"],"names":["React","Component","Page","Navbar","NavLeft","NavTitle","NavRight","Link","Toolbar","Block","BlockTitle","List","ListItem","ListInput","Row","Col","Button","HomePage","props","state","weight","age","height","goal","intake","handleChange","bind","clearInput","calculate","calculateWeightLoss","addDays","calculateTDEE","parseMonth","checkValues","event","persist","setState","target","name","value","date","days","Date","setTime","getTime","bmr","gender","parseInt","activityLevel","month","errorMessage","isNaN","labels","data","tableData","finishDate","goalAchieved","iterations","parseFloat","push","getMonth","getFullYear","toString","slice","toFixed","openCustomDialog","deficit","kgDeficit","getDate","label","console","log","$f7router","navigate","generateData","fakeGoalData","map","datasets","backgroundColor","borderColor","borderWidth","pointRadius","pointHitRadius","cubicInterpolationMode","fill","borderDash","message","self","$f7","dialog","alert","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Page,\n    Navbar,\n    NavLeft,\n    NavTitle,\n    NavRight,\n    Link,\n    Toolbar,\n    Block,\n    BlockTitle,\n    List,\n    ListItem,\n    ListInput,\n    Row,\n    Col,\n    Button\n} from 'framework7-react';\n\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props)\n      this.state = {\n        weight: 100,\n        age: 28,\n        height: 180,\n        goal: 80,\n        intake: 2000\n      }\n\n      this.handleChange = this.handleChange.bind(this)\n      this.clearInput = this.clearInput.bind(this)\n      this.calculate = this.calculate.bind(this)\n      this.calculateWeightLoss = this.calculateWeightLoss.bind(this)\n      this.addDays = this.addDays.bind(this)\n      this.calculateTDEE = this.calculateTDEE.bind(this)\n      this.parseMonth = this.parseMonth.bind(this)\n      this.checkValues = this.checkValues.bind(this)\n\n  }\n\n  handleChange(event) {\n    event.persist()\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  clearInput(event) {\n    this.setState({[event.target.name]: \"\"})\n  }\n\n  calculate() {\n    //do input checks first\n    this.calculateWeightLoss()\n  }\n\n  //Adds specified number of days to current date\n  addDays(date, days) {\n    return new Date(date.setTime( date.getTime() + days * 86400000 ))\n  }\n\n  doChecks() {\n\n  }\n\n  calculateTDEE(weight, height, age) {\n\n    let bmr = 0\n\n    // check if gender is female\n    if (this.state.gender == 0) {\n      bmr = (10*weight) + (6.25*height) - (5*age) - 161\n    } else {\n      bmr = (10*weight) + (6.25*height) - (5*age) + 5\n    }\n\n    switch (parseInt(this.state.activityLevel)) {\n      case 1: return parseInt(bmr*1.20)\n      case 2: return parseInt(bmr*1.375)\n      case 3: return parseInt(bmr*1.550)\n      case 4: return parseInt(bmr*1.725)\n      case 5: return parseInt(bmr*1.900)\n      default: return parseInt(bmr*1.20)\n    }\n\n  }\n\n  parseMonth(month) {\n    switch (month) {\n      case 0: return \"Jan\"\n      case 1: return \"Feb\"\n      case 2: return \"Mar\"\n      case 3: return \"Apr\"\n      case 4: return \"May\"\n      case 5: return \"Jun\"\n      case 6: return \"Jul\"\n      case 7: return \"Aug\"\n      case 8: return \"Sep\"\n      case 9: return \"Oct\"\n      case 10: return \"Nov\"\n      case 11: return \"Dec\"\n      default: return \"N/A\"\n    }\n  }\n\n  //checks input and throws errors in case some values are inadequate\n  checkValues() {\n    if (this.state.weight < 40 || this.state.weight > 600) {\n      this.setState({errorMessage: \"Weight must be between 40 and 600.\"})\n      return false\n    }\n\n    if (this.state.weight == null || this.state.weight == \"\" || isNaN(this.state.weight)) {\n      this.setState({errorMessage: \"Weight input cannot be empty!\"})\n      return false\n    }\n\n    if (this.state.age == null || this.state.age == \"\" || isNaN(this.state.age)) {\n      this.setState({errorMessage: \"Age input cannot be empty!\"})\n      return false\n    }\n\n    if (this.state.age < 10 || this.state.age > 110) {\n      this.setState({errorMessage: \"Age must be between 10 and 110.\"})\n      return false\n    }\n\n    if (this.state.height == null || this.state.height == \"\" || isNaN(this.state.height)) {\n      this.setState({errorMessage: \"Height cannot be empty.\"})\n      return false\n    }\n\n    if (this.state.height < 100 || this.state.height > 250) {\n      this.setState({errorMessage: \"Height must be between 100 and 250.\"})\n      return false\n    }\n\n    if (this.state.goal > this.state.weight) {\n      this.setState({errorMessage: \"Goal weight must be lower than current weight.\"})\n      return false\n    }\n\n    //there needs to be a functionality that calculates goal weight based on BMI if field is left empty\n    if (this.state.goal == null || this.state.goal == \"\" || isNaN(this.state.goal)) {\n      this.setState({errorMessage: \"Goal weight cannot be empty.\"})\n      return false\n    }\n\n    if (this.state.goal < 30 || this.state.goal > 500) {\n      this.setState({errorMessage: \"Goal weight must be between 30 and 500.\"})\n      return false\n    }\n\n    if (this.state.intake < 1000) {\n      this.setState({errorMessage: \"Calorie intake of less than 1000 is very unhealthy, please don't do it.\"})\n      return false\n    }\n\n    if (this.state.intake > 15000) {\n      this.setState({errorMessage: \"Calorie intake can't be higher than 15000.\"})\n      return false\n    }\n\n    if (this.state.intake == null || this.state.intake == \"\" || isNaN(this.state.intake)) {\n      this.setState({errorMessage: \"Calorie intake can't be empty!\"})\n      return false\n    }\n\n    if (this.calculateTDEE(this.state.weight, this.state.height, this.state.age) < this.state.intake) {\n      this.setState({errorMessage: \"Your calorie intake is too high to lose weight. Reduce intake or increase excersise.\"})\n      return false\n    }\n\n    return true\n\n  }\n\n  calculateWeightLoss() {\n    const labels = []\n    const data = []\n    const tableData = []\n    let date = new Date()\n    let finishDate = new Date()\n    let goalAchieved = false\n\n    let iterations = 0\n\n    let weight = parseFloat(this.state.weight)\n    let age = parseFloat(this.state.age)\n\n    // put first label and data before calculating\n    labels.push(this.parseMonth(date.getMonth()) + \" '\" + date.getFullYear().toString().slice(2))\n    data.push(weight.toFixed(1))\n\n    if(!this.checkValues()) {\n      this.openCustomDialog(this.state.errorMessage)\n    }\n\n  // first make sure that TDEE is higher than intake\n  if ((this.calculateTDEE(weight, this.state.height, age) > this.state.intake) && this.checkValues()) {\n    while(parseFloat(weight) >= parseFloat(this.state.goal-3)) {\n      // calculate caloric deficit by subtracting intake from TDEE\n      let deficit = this.calculateTDEE(weight, this.state.height, age) - this.state.intake;\n      // calculate deficit in KG by dividing calories/7700\n      let kgDeficit = deficit/7700\n      // set new weight after subtracting deficit\n      weight = weight - kgDeficit\n      // add a day?\n      date = this.addDays(date, 1)\n      // set age one day higher\n      age = age + 1/365;\n\n      iterations++\n\n      //on the 14th day of each month add data to arrays that will be displayed on chart\n      if(date.getDate() == 14) {\n        labels.push(this.parseMonth(date.getMonth()) + \" '\" + date.getFullYear().toString().slice(2))\n        data.push(weight.toFixed(1))\n        tableData.push({\n          label: this.parseMonth(date.getMonth()) + \" \" + date.getFullYear(),\n          data: weight.toFixed(1)\n        })\n      }\n\n      if ((parseFloat(weight) < parseFloat(this.state.goal)) && !goalAchieved) {\n        goalAchieved = true\n        finishDate = date\n      }\n\n    }\n\n    if (parseFloat(weight) < parseFloat(this.state.goal-3)) {\n      console.log(\"CALCULATION ENDED\", iterations)\n      console.log(\"FINISH DATE\", finishDate)\n\n      this.$f7router.navigate('/results/', {\n          props: {\n            data: this.generateData(labels, data),\n            finishDate: finishDate,\n            tableData: tableData\n            }\n          })\n    }\n\n      } else {\n        // show warning that TDEE is lower than intake\n      }\n\n\n  }\n\n  generateData(labels, data) {\n\n    // generate fake data for second dataset\n    const fakeGoalData = []\n    data.map(() => fakeGoalData.push(80))\n\n    return {\n      labels: labels,\n      datasets: [{\n          label: 'Weight',\n          data: data,\n          backgroundColor: [\n              'rgba(255,59,48,0.5)'\n          ],\n          borderColor: [\n              '#ff3b30'\n          ],\n          borderWidth: 2,\n          pointRadius: 0,\n          pointHitRadius: 20,\n          cubicInterpolationMode: 'default'\n      },\n      {\n          label: 'Goal',\n          data: fakeGoalData,\n          fill: false,\n          borderColor: [\n              'rgba(0,0,0,1)'\n          ],\n          borderWidth: 1,\n          borderDash: [10],\n          pointRadius: 0,\n          pointHitRadius: 20,\n          cubicInterpolationMode: 'default'\n      }\n    ]\n    }\n  }\n\n  openCustomDialog(message) {\n    const self = this;\n    self.$f7.dialog.alert(message, \"Error\")\n  }\n\nrender() {\n  return (\n    <Page colorTheme=\"red\">\n      <Navbar colorTheme=\"red\">\n        {/*<NavLeft>\n          <Link iconIos=\"f7:menu\" iconMd=\"material:menu\" panelOpen=\"left\"></Link>\n        </NavLeft>*/}\n        <NavTitle>Weight loss estimator</NavTitle>\n        {/*<NavRight>\n          <Link iconIos=\"f7:menu\" iconMd=\"material:menu\" panelOpen=\"right\"></Link>\n        </NavRight>*/}\n      </Navbar>\n      {/*<Toolbar bottom>\n        <Link>Left Link</Link>\n        <Link>Right Link</Link>\n      </Toolbar>*/}\n\n\n\n      <BlockTitle>Your stats</BlockTitle>\n        <List inset>\n          <ListInput\n            label=\"Current weight (kg)\"\n            type=\"number\"\n            placeholder=\"105 kg\"\n            name=\"weight\"\n            onChange={this.handleChange}\n            value={this.state.weight}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Age\"\n            type=\"number\"\n            placeholder=\"29\"\n            name=\"age\"\n            onChange={this.handleChange}\n            value={this.state.age}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Height (cm)\"\n            type=\"number\"\n            placeholder=\"179\"\n            name=\"height\"\n            onChange={this.handleChange}\n            value={this.state.height}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Goal weight (kg)\"\n            type=\"number\"\n            placeholder=\"80\"\n            name=\"goal\"\n            onChange={this.handleChange}\n            value={this.state.goal}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Daily intake (kcal)\"\n            type=\"number\"\n            placeholder=\"2100\"\n            name=\"intake\"\n            onChange={this.handleChange}\n            value={this.state.intake}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Gender\"\n            type=\"select\"\n            defaultValue=\"1\"\n            placeholder=\"Please choose...\"\n            name=\"gender\"\n            onChange={this.handleChange}\n            value={this.state.gender}\n            >\n            <option value=\"1\">Male</option>\n            <option value=\"0\">Female</option>\n          </ListInput>\n          <ListItem title=\"Activity level\" smartSelect>\n            <select\n              name=\"activityLevel\"\n              defaultValue=\"1\"\n              onChange={this.handleChange}\n              value={this.state.activityLevel}\n              >\n              <option value=\"1\">Couch potato</option>\n              <option value=\"2\">Light activity</option>\n              <option value=\"3\">Moderate activity</option>\n              <option value=\"4\">Heavy activity</option>\n              <option value=\"5\">Athlete</option>\n            </select>\n          </ListItem>\n        </List>\n\n        {/*<Block strong inset>\n          <p>Click calculate to see the results.</p>\n        </Block>*/}\n\n      <Block>\n        <Row>\n          <Col>\n            <Button fill round large onClick={this.calculate}>Calculate</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button href={\"/about/\"} style={{marginTop: \"15px\"}}>About</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button onClick={this.openCustomDialog.bind(this)} style={{marginTop: \"15px\"}}>About</Button>\n          </Col>\n        </Row>\n      </Block>\n\n    </Page>\n  )\n}\n\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}
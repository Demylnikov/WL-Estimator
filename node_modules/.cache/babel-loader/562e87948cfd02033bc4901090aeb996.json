{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Modal from '../modal/modal-class';\n\nvar Sheet =\n/*#__PURE__*/\nfunction (_Modal) {\n  _inherits(Sheet, _Modal);\n\n  function Sheet(app, params) {\n    var _this;\n\n    _classCallCheck(this, Sheet);\n\n    var extendedParams = Utils.extend({\n      on: {}\n    }, app.params.sheet, params); // Extends with open/close Modal methods;\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sheet).call(this, app, extendedParams));\n\n    var sheet = _assertThisInitialized(_assertThisInitialized(_this));\n\n    sheet.params = extendedParams; // Find Element\n\n    var $el;\n\n    if (!sheet.params.el) {\n      $el = $(sheet.params.content);\n    } else {\n      $el = $(sheet.params.el);\n    }\n\n    if ($el && $el.length > 0 && $el[0].f7Modal) {\n      return _possibleConstructorReturn(_this, $el[0].f7Modal);\n    }\n\n    if ($el.length === 0) {\n      return _possibleConstructorReturn(_this, sheet.destroy());\n    }\n\n    var $backdropEl;\n\n    if (sheet.params.backdrop) {\n      $backdropEl = app.root.children('.sheet-backdrop');\n\n      if ($backdropEl.length === 0) {\n        $backdropEl = $('<div class=\"sheet-backdrop\"></div>');\n        app.root.append($backdropEl);\n      }\n    }\n\n    var $pageContentEl;\n\n    function scrollToOpen() {\n      var $scrollEl = $(sheet.params.scrollToEl).eq(0);\n      if ($scrollEl.length === 0) return;\n      $pageContentEl = $scrollEl.parents('.page-content');\n      if ($pageContentEl.length === 0) return;\n      var paddingTop = parseInt($pageContentEl.css('padding-top'), 10);\n      var paddingBottom = parseInt($pageContentEl.css('padding-bottom'), 10);\n      var pageHeight = $pageContentEl[0].offsetHeight - paddingTop - $el.height();\n      var pageScrollHeight = $pageContentEl[0].scrollHeight - paddingTop - $el.height();\n      var pageScroll = $pageContentEl.scrollTop();\n      var newPaddingBottom;\n      var scrollElTop = $scrollEl.offset().top - paddingTop + $scrollEl[0].offsetHeight;\n\n      if (scrollElTop > pageHeight) {\n        var scrollTop = pageScroll + scrollElTop - pageHeight;\n\n        if (scrollTop + pageHeight > pageScrollHeight) {\n          newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;\n\n          if (pageHeight === pageScrollHeight) {\n            newPaddingBottom = $el.height();\n          }\n\n          $pageContentEl.css({\n            'padding-bottom': \"\".concat(newPaddingBottom, \"px\")\n          });\n        }\n\n        $pageContentEl.scrollTop(scrollTop, 300);\n      }\n    }\n\n    function scrollToClose() {\n      if ($pageContentEl && $pageContentEl.length > 0) {\n        $pageContentEl.css({\n          'padding-bottom': ''\n        });\n      }\n    }\n\n    function handleClick(e) {\n      var target = e.target;\n      var $target = $(target);\n\n      if ($target.closest(sheet.el).length === 0) {\n        if (sheet.params.closeByBackdropClick && sheet.params.backdrop && sheet.backdropEl && sheet.backdropEl === target) {\n          sheet.close();\n        } else if (sheet.params.closeByOutsideClick) {\n          sheet.close();\n        }\n      }\n    }\n\n    sheet.on('sheetOpen', function () {\n      if (sheet.params.scrollToEl) {\n        scrollToOpen();\n      }\n    });\n    sheet.on('sheetOpened', function () {\n      if (sheet.params.closeByOutsideClick || sheet.params.closeByBackdropClick) {\n        app.on('click', handleClick);\n      }\n    });\n    sheet.on('sheetClose', function () {\n      if (sheet.params.scrollToEl) {\n        scrollToClose();\n      }\n\n      if (sheet.params.closeByOutsideClick || sheet.params.closeByBackdropClick) {\n        app.off('click', handleClick);\n      }\n    });\n    Utils.extend(sheet, {\n      app: app,\n      $el: $el,\n      el: $el[0],\n      $backdropEl: $backdropEl,\n      backdropEl: $backdropEl && $backdropEl[0],\n      type: 'sheet'\n    });\n    $el[0].f7Modal = sheet;\n    return _possibleConstructorReturn(_this, sheet);\n  }\n\n  return Sheet;\n}(Modal);\n\nexport default Sheet;","map":null,"metadata":{},"sourceType":"module"}
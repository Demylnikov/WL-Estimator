{"ast":null,"code":"import _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport Utils from '../utils/utils';\nimport Mixins from '../utils/mixins';\nimport __reactComponentSlots from '../runtime-helpers/react-component-slots.js';\nimport __reactComponentSetProps from '../runtime-helpers/react-component-set-props.js';\n\nvar F7SkeletonBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(F7SkeletonBlock, _React$Component);\n\n  function F7SkeletonBlock(props, context) {\n    _classCallCheck(this, F7SkeletonBlock);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(F7SkeletonBlock).call(this, props, context));\n  }\n\n  _createClass(F7SkeletonBlock, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var className = props.className,\n          id = props.id,\n          style = props.style,\n          width = props.width,\n          height = props.height,\n          tag = props.tag;\n      var classes = Utils.classNames('skeleton-block', className, Mixins.colorClasses(props));\n      var styleAttribute = style;\n\n      if (width) {\n        var widthValue = typeof width === 'number' ? \"\".concat(width, \"px\") : width;\n\n        if (!styleAttribute) {\n          styleAttribute = {\n            width: widthValue\n          };\n        } else if (typeof styleAttribute === 'object') {\n          styleAttribute = Object.assign({\n            width: widthValue\n          }, styleAttribute);\n        } else if (typeof styleAttribute === 'string') {\n          styleAttribute = \"width: \".concat(widthValue, \"; \").concat(styleAttribute);\n        }\n      }\n\n      if (height) {\n        var heightValue = typeof height === 'number' ? \"\".concat(height, \"px\") : height;\n\n        if (!styleAttribute) {\n          styleAttribute = {\n            height: heightValue\n          };\n        } else if (typeof styleAttribute === 'object') {\n          styleAttribute = Object.assign({\n            height: heightValue\n          }, styleAttribute);\n        } else if (typeof styleAttribute === 'string') {\n          styleAttribute = \"height: \".concat(heightValue, \"; \").concat(styleAttribute);\n        }\n      }\n\n      var Tag = tag;\n      return React.createElement(Tag, {\n        id: id,\n        style: styleAttribute,\n        className: classes\n      }, this.slots['default']);\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return __reactComponentSlots(this.props);\n    }\n  }]);\n\n  return F7SkeletonBlock;\n}(React.Component);\n\n__reactComponentSetProps(F7SkeletonBlock, Object.assign({\n  id: [String, Number],\n  className: String,\n  style: Object,\n  width: [Number, String],\n  height: [Number, String],\n  tag: {\n    type: String,\n    default: 'div'\n  }\n}, Mixins.colorProps));\n\nF7SkeletonBlock.displayName = 'f7-skeleton-block';\nexport default F7SkeletonBlock;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import $ from 'dom7';\nimport Utils from '../../utils/utils';\nimport Panel from './panel-class';\nexport default {\n  name: 'panel',\n  params: {\n    panel: {\n      leftBreakpoint: 0,\n      rightBreakpoint: 0,\n      swipe: undefined,\n      // or 'left' or 'right' or 'both'\n      swipeActiveArea: 0,\n      swipeCloseActiveAreaSide: 0,\n      swipeCloseOpposite: true,\n      swipeOnlyClose: false,\n      swipeNoFollow: false,\n      swipeThreshold: 0,\n      closeByBackdropClick: true\n    }\n  },\n  static: {\n    Panel: Panel\n  },\n  instance: {\n    panel: {\n      allowOpen: true\n    }\n  },\n  create: function create() {\n    var app = this;\n    Utils.extend(app.panel, {\n      disableSwipe: function disableSwipe() {\n        var panel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'both';\n        var side;\n        var panels = [];\n\n        if (typeof panel === 'string') {\n          if (panel === 'both') {\n            side = 'both';\n            panels = [app.panel.left, app.panel.right];\n          } else {\n            side = panel;\n            panels.push(app.panel[side]);\n          }\n        } else {\n          panels = [panel];\n        }\n\n        panels.forEach(function (panelInstance) {\n          if (panelInstance) Utils.extend(panelInstance, {\n            swipeable: false\n          });\n        });\n      },\n      enableSwipe: function enableSwipe() {\n        var panel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'both';\n        var panels = [];\n        var side;\n\n        if (typeof panel === 'string') {\n          side = panel;\n\n          if (app.params.panel.swipe === 'left' && side === 'right' || app.params.panel.swipe === 'right' && side === 'left' || side === 'both') {\n            side = 'both';\n            app.params.panel.swipe = side;\n            panels = [app.panel.left, app.panel.right];\n          } else {\n            app.params.panel.swipe = side;\n            panels.push(app.panel[side]);\n          }\n        } else if (panel) {\n          panels.push(panel);\n        }\n\n        if (panels.length) {\n          panels.forEach(function (panelInstance) {\n            if (!panelInstance) return;\n\n            if (!panelInstance.swipeInitialized) {\n              panelInstance.initSwipePanel();\n            } else {\n              Utils.extend(panelInstance, {\n                swipeable: true\n              });\n            }\n          });\n        }\n      },\n      create: function create(params) {\n        return new Panel(app, params);\n      },\n      open: function open(side, animate) {\n        var panelSide = side;\n\n        if (!panelSide) {\n          if ($('.panel').length > 1) {\n            return false;\n          }\n\n          panelSide = $('.panel').hasClass('panel-left') ? 'left' : 'right';\n        }\n\n        if (!panelSide) return false;\n\n        if (app.panel[panelSide]) {\n          return app.panel[panelSide].open(animate);\n        }\n\n        var $panelEl = $(\".panel-\".concat(panelSide));\n\n        if ($panelEl.length > 0) {\n          return app.panel.create({\n            el: $panelEl\n          }).open(animate);\n        }\n\n        return false;\n      },\n      close: function close(side, animate) {\n        var $panelEl;\n        var panelSide;\n\n        if (panelSide) {\n          panelSide = side;\n          $panelEl = $(\".panel-\".concat(panelSide));\n        } else {\n          $panelEl = $('.panel.panel-active');\n          panelSide = $panelEl.hasClass('panel-left') ? 'left' : 'right';\n        }\n\n        if (!panelSide) return false;\n\n        if (app.panel[panelSide]) {\n          return app.panel[panelSide].close(animate);\n        }\n\n        if ($panelEl.length > 0) {\n          return app.panel.create({\n            el: $panelEl\n          }).close(animate);\n        }\n\n        return false;\n      },\n      get: function get(side) {\n        var panelSide = side;\n\n        if (!panelSide) {\n          if ($('.panel').length > 1) {\n            return undefined;\n          }\n\n          panelSide = $('.panel').hasClass('panel-left') ? 'left' : 'right';\n        }\n\n        if (!panelSide) return undefined;\n\n        if (app.panel[panelSide]) {\n          return app.panel[panelSide];\n        }\n\n        var $panelEl = $(\".panel-\".concat(panelSide));\n\n        if ($panelEl.length > 0) {\n          return app.panel.create({\n            el: $panelEl\n          });\n        }\n\n        return undefined;\n      }\n    });\n  },\n  on: {\n    init: function init() {\n      var app = this; // Create Panels\n\n      $('.panel').each(function (index, panelEl) {\n        var side = $(panelEl).hasClass('panel-left') ? 'left' : 'right';\n        app.panel[side] = app.panel.create({\n          el: panelEl,\n          side: side\n        });\n      });\n    }\n  },\n  clicks: {\n    '.panel-open': function open(clickedEl) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var app = this;\n      var side = 'left';\n\n      if (data.panel === 'right' || $('.panel').length === 1 && $('.panel').hasClass('panel-right')) {\n        side = 'right';\n      }\n\n      app.panel.open(side, data.animate);\n    },\n    '.panel-close': function close(clickedEl) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var app = this;\n      var side = data.panel;\n      app.panel.close(side, data.animate);\n    },\n    '.panel-backdrop': function close() {\n      var app = this;\n      var $panelEl = $('.panel-active');\n      var instance = $panelEl[0] && $panelEl[0].f7Panel;\n      $panelEl.trigger('panel:backdrop-click');\n\n      if (instance) {\n        instance.emit('backdropClick', instance);\n      }\n\n      app.emit('panelBackdropClick', instance || $panelEl[0]);\n      if (app.params.panel.closeByBackdropClick) app.panel.close();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/denismylnikov/Projects/wlapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/denismylnikov/Projects/wlapp/src/components/pages/DataPage.jsx\";\nimport React, { Component } from 'react';\nimport { Block, BlockTitle, List, ListInput, Page, Navbar, BlockHeader } from 'framework7-react';\nimport { Line } from 'react-chartjs-2';\nvar graphOptions = {\n  maintainAspectRatio: false,\n  //this will make the graph use assigned size\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: false\n      },\n      gridLines: {\n        display: true,\n        color: \"#252525\",\n        drawBorder: false\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        beginAtZero: false\n      },\n      gridLines: {\n        display: false,\n        color: \"#f7f7f7\",\n        drawBorder: false\n      }\n    }]\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false,\n    backgroundColor: '#f7f7f7',\n    titleFontColor: '#8e8e93',\n    titleFontSize: 12,\n    bodyFontColor: '#000',\n    bodyFontSize: 16,\n    displayColors: false,\n    borderColor: '#000',\n    borderWidth: 0\n  }\n};\n\nvar DataPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataPage, _Component);\n\n  function DataPage(props) {\n    var _this;\n\n    _classCallCheck(this, DataPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataPage).call(this, props));\n    _this.state = {\n      name: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearInput = _this.clearInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DataPage, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      event.persist();\n      console.log(\"handle change\", event);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"clearInput\",\n    value: function clearInput(event) {\n      console.log(\"clear input\", event);\n      this.setState(_defineProperty({}, event.target.name, \"\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Page, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        title: \"Results\",\n        backLink: \"Back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Block, {\n        style: {\n          height: \"100vw\"\n        },\n        id: \"chart-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.props.data,\n        options: graphOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"data-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"label-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        className: \"numeric-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Weight\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.tableData.map(function (set) {\n        return React.createElement(\"tr\", {\n          key: set.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: \"label-cell\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, set.label), React.createElement(\"td\", {\n          className: \"numeric-cell\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, set.data, \" kg\"));\n      }))))));\n    }\n  }]);\n\n  return DataPage;\n}(Component);\n\nexport default DataPage;","map":{"version":3,"sources":["/Users/denismylnikov/Projects/wlapp/src/components/pages/DataPage.jsx"],"names":["React","Component","Block","BlockTitle","List","ListInput","Page","Navbar","BlockHeader","Line","graphOptions","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","gridLines","display","color","drawBorder","xAxes","legend","tooltips","enabled","backgroundColor","titleFontColor","titleFontSize","bodyFontColor","bodyFontSize","displayColors","borderColor","borderWidth","DataPage","props","state","name","handleChange","bind","clearInput","event","persist","console","log","setState","target","value","height","data","tableData","map","set","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Block, BlockTitle, List, ListInput, Page, Navbar, BlockHeader} from 'framework7-react'\nimport { Line } from 'react-chartjs-2';\n\nconst graphOptions = {\n  maintainAspectRatio: false, //this will make the graph use assigned size\n  scales: {\n      yAxes: [{\n          ticks: {\n              beginAtZero:false\n          },\n          gridLines: {\n            display: true,\n            color: \"#252525\",\n            drawBorder: false\n          }\n      }],\n      xAxes: [{\n          ticks: {\n              beginAtZero:false\n          },\n          gridLines: {\n            display: false,\n            color: \"#f7f7f7\",\n            drawBorder: false\n          }\n      }]\n\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false,\n    backgroundColor: '#f7f7f7',\n    titleFontColor: '#8e8e93',\n    titleFontSize: 12,\n    bodyFontColor: '#000',\n    bodyFontSize: 16,\n    displayColors: false,\n    borderColor: '#000',\n    borderWidth: 0\n  }\n}\n\nclass DataPage extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.clearInput = this.clearInput.bind(this)\n  }\n\n  handleChange(event) {\n    event.persist()\n    console.log(\"handle change\", event)\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  clearInput(event) {\n    console.log(\"clear input\", event)\n    this.setState({[event.target.name]: \"\"})\n  }\n\n  render() {\n    return (\n      <Page>\n        <Navbar title=\"Results\" backLink=\"Back\"></Navbar>\n        <Block style={{height: \"100vw\"}} id=\"chart-block\">\n        <Line\n            data={this.props.data}\n            options={graphOptions}\n          />\n      </Block>\n      {/*<Block strong inset>\n        <p>{\"You might achieve your goal weight sometime in \" + this.props.finishDate.getMonth() + \" \" + this.props.finishDate.getFullYear() + \"!\"}</p>\n      </Block>*/}\n\n      <Block>\n        <div className=\"data-table\">\n          <table>\n            <thead>\n              <tr>\n                <th className=\"label-cell\">Date</th>\n                <th className=\"numeric-cell\">Weight</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.tableData.map(set => <tr key={set.label}>\n                  <td className=\"label-cell\">{set.label}</td>\n                  <td className=\"numeric-cell\">{set.data} kg</td>\n                </tr>)\n              }\n            </tbody>\n          </table>\n        </div>\n      </Block>\n\n      </Page>\n    );\n  }\n\n}\n\nexport default DataPage;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/pages/HomePage.jsx","components/pages/DynamicRoutePage.jsx","components/pages/DataPage.jsx","routes.js","components/pages/PanelLeftPage.jsx","components/pages/PanelRightPage.jsx","components/pages/AboutPage.jsx","components/pages/FormPage.jsx","components/pages/NotFoundPage.jsx","index.js","components/App.jsx"],"names":["HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","weight","age","height","goal","intake","handleChange","bind","assertThisInitialized","clearInput","calculate","calculateWeightLoss","addDays","calculateTDEE","parseMonth","checkValues","event","persist","setState","defineProperty","target","name","value","date","days","Date","setTime","getTime","bmr","gender","parseInt","activityLevel","month","errorMessage","isNaN","labels","data","tableData","finishDate","goalAchieved","parseFloat","push","getMonth","getFullYear","toString","slice","toFixed","openCustomDialog","iterations","getDate","label","$f7router","navigate","generateData","_ref","fakeGoalData","map","datasets","backgroundColor","borderColor","borderWidth","pointRadius","pointHitRadius","cubicInterpolationMode","fill","borderDash","message","$f7","dialog","alert","react_default","a","createElement","framework7_react_esm","colorTheme","style","marginLeft","inset","type","placeholder","onChange","onInputClear","defaultValue","title","smartSelect","smartSelectParams","closeOnSelect","round","large","onClick","href","marginTop","Component","DynamicRoutePage","backLink","strong","$f7route","url","path","hash","keys","params","key","query","JSON","stringify","route","back","graphOptions","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","gridLines","display","color","drawBorder","xAxes","legend","tooltips","enabled","titleFontColor","titleFontSize","bodyFontColor","bodyFontSize","displayColors","routes","component","link","view","panelClose","form","slot","input","min","max","step","resizable","Array","from","n","checkbox","concat","radio","defaultChecked","tag","className","raised","outline","small","DataPage","console","log","id","es","options","set","Framework7","use","Framework7React","ReactDOM","render","React","f7params","theme","themeDark","left","cover","right","reveal","main","popupClose","loginScreen","loginScreenClose","document","getElementById"],"mappings":"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","file":"static/js/main.4ca8f79f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Page,\n    Navbar,\n    NavLeft,\n    NavTitle,\n    NavRight,\n    Link,\n    Toolbar,\n    Block,\n    BlockTitle,\n    List,\n    ListItem,\n    ListInput,\n    Row,\n    Col,\n    Button\n} from 'framework7-react';\n\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props)\n      this.state = {\n        weight: 100,\n        age: 28,\n        height: 180,\n        goal: 80,\n        intake: 2000\n      }\n\n      this.handleChange = this.handleChange.bind(this)\n      this.clearInput = this.clearInput.bind(this)\n      this.calculate = this.calculate.bind(this)\n      this.calculateWeightLoss = this.calculateWeightLoss.bind(this)\n      this.addDays = this.addDays.bind(this)\n      this.calculateTDEE = this.calculateTDEE.bind(this)\n      this.parseMonth = this.parseMonth.bind(this)\n      this.checkValues = this.checkValues.bind(this)\n\n  }\n\n  handleChange(event) {\n    event.persist()\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  clearInput(event) {\n    this.setState({[event.target.name]: \"\"})\n  }\n\n  calculate() {\n    //do input checks first\n    this.calculateWeightLoss()\n  }\n\n  //Adds specified number of days to current date\n  addDays(date, days) {\n    return new Date(date.setTime( date.getTime() + days * 86400000 ))\n  }\n\n  doChecks() {\n\n  }\n\n  calculateTDEE(weight, height, age) {\n\n    let bmr = 0\n\n    // check if gender is female\n    if (this.state.gender == 0) {\n      bmr = (10*weight) + (6.25*height) - (5*age) - 161\n    } else {\n      bmr = (10*weight) + (6.25*height) - (5*age) + 5\n    }\n\n    switch (parseInt(this.state.activityLevel)) {\n      case 1: return parseInt(bmr*1.20)\n      case 2: return parseInt(bmr*1.375)\n      case 3: return parseInt(bmr*1.550)\n      case 4: return parseInt(bmr*1.725)\n      case 5: return parseInt(bmr*1.900)\n      default: return parseInt(bmr*1.20)\n    }\n\n  }\n\n  parseMonth(month) {\n    switch (month) {\n      case 0: return \"Jan\"\n      case 1: return \"Feb\"\n      case 2: return \"Mar\"\n      case 3: return \"Apr\"\n      case 4: return \"May\"\n      case 5: return \"Jun\"\n      case 6: return \"Jul\"\n      case 7: return \"Aug\"\n      case 8: return \"Sep\"\n      case 9: return \"Oct\"\n      case 10: return \"Nov\"\n      case 11: return \"Dec\"\n      default: return \"N/A\"\n    }\n  }\n\n  //checks input and throws errors in case some values are inadequate\n  checkValues() {\n    if (this.state.weight < 40 || this.state.weight > 600) {\n      this.setState({errorMessage: \"Weight must be between 40 and 600.\"})\n      return false\n    }\n\n    if (this.state.weight == null || this.state.weight == \"\" || isNaN(this.state.weight)) {\n      this.setState({errorMessage: \"Weight input cannot be empty!\"})\n      return false\n    }\n\n    if (this.state.age == null || this.state.age == \"\" || isNaN(this.state.age)) {\n      this.setState({errorMessage: \"Age input cannot be empty!\"})\n      return false\n    }\n\n    if (this.state.age < 10 || this.state.age > 110) {\n      this.setState({errorMessage: \"Age must be between 10 and 110.\"})\n      return false\n    }\n\n    if (this.state.height == null || this.state.height == \"\" || isNaN(this.state.height)) {\n      this.setState({errorMessage: \"Height cannot be empty.\"})\n      return false\n    }\n\n    if (this.state.height < 100 || this.state.height > 250) {\n      this.setState({errorMessage: \"Height must be between 100 and 250.\"})\n      return false\n    }\n\n    if (this.state.goal > this.state.weight) {\n      this.setState({errorMessage: \"Goal weight must be lower than current weight.\"})\n      return false\n    }\n\n    //there needs to be a functionality that calculates goal weight based on BMI if field is left empty\n    if (this.state.goal == null || this.state.goal == \"\" || isNaN(this.state.goal)) {\n      this.setState({errorMessage: \"Goal weight cannot be empty.\"})\n      return false\n    }\n\n    if (this.state.goal < 30 || this.state.goal > 500) {\n      this.setState({errorMessage: \"Goal weight must be between 30 and 500.\"})\n      return false\n    }\n\n    if (this.state.intake < 1000) {\n      this.setState({errorMessage: \"Calorie intake of less than 1000 is very unhealthy, please don't do it.\"})\n      return false\n    }\n\n    if (this.state.intake > 15000) {\n      this.setState({errorMessage: \"Calorie intake can't be higher than 15000.\"})\n      return false\n    }\n\n    if (this.state.intake == null || this.state.intake == \"\" || isNaN(this.state.intake)) {\n      this.setState({errorMessage: \"Calorie intake can't be empty!\"})\n      return false\n    }\n\n    if (this.calculateTDEE(this.state.weight, this.state.height, this.state.age) < this.state.intake) {\n      this.setState({errorMessage: \"Your calorie intake is too high to lose weight. Reduce intake or increase excersise. Your intake needs to be lower than \" + this.calculateTDEE(this.state.weight, this.state.height, this.state.age) + \" kcal to lose weight.\" })\n      return false\n    }\n\n    return true\n\n  }\n\n  calculateWeightLoss() {\n    const labels = []\n    const data = []\n    const tableData = []\n    let date = new Date()\n    let finishDate = new Date()\n    let goalAchieved = false\n\n    let iterations = 0\n\n    let weight = parseFloat(this.state.weight)\n    let age = parseFloat(this.state.age)\n\n    // put first label and data before calculating\n    labels.push(this.parseMonth(date.getMonth()) + \" '\" + date.getFullYear().toString().slice(2))\n    data.push(weight.toFixed(1))\n\n    if(!this.checkValues()) {\n      this.openCustomDialog(this.state.errorMessage)\n    }\n\n  // first make sure that TDEE is higher than intake\n  if ((this.calculateTDEE(weight, this.state.height, age) > this.state.intake) && this.checkValues()) {\n    while(parseFloat(weight) >= parseFloat(this.state.goal-3)) {\n      // calculate caloric deficit by subtracting intake from TDEE\n      let deficit = this.calculateTDEE(weight, this.state.height, age) - this.state.intake;\n      // calculate deficit in KG by dividing calories/7700\n      let kgDeficit = deficit/7700\n      // set new weight after subtracting deficit\n      weight = weight - kgDeficit\n      // add a day?\n      date = this.addDays(date, 1)\n      // set age one day higher\n      age = age + 1/365;\n\n      iterations++\n\n      //on the 14th day of each month add data to arrays that will be displayed on chart\n      if(date.getDate() == 14) {\n        labels.push(this.parseMonth(date.getMonth()) + \" '\" + date.getFullYear().toString().slice(2))\n        data.push(weight.toFixed(1))\n        tableData.push({\n          label: this.parseMonth(date.getMonth()) + \" \" + date.getFullYear(),\n          data: weight.toFixed(1)\n        })\n      }\n\n      if (this.calculateTDEE(weight, this.state.height, age) <= this.state.intake) {\n        this.openCustomDialog(\"You can't reach your goal weight with given calorie intake and level of activity. The lowest weight you will be able to achieve is \" + weight.toFixed(1) + \" kg\")\n        weight = 0; //this needs to be here to break out of while loop\n    \t}\n\n      if ((parseFloat(weight) < parseFloat(this.state.goal)) && !goalAchieved) {\n        goalAchieved = true\n        finishDate = date\n      }\n\n    }\n\n    if (parseFloat(weight) < parseFloat(this.state.goal-3)) {\n      this.$f7router.navigate('/results/', {\n          props: {\n            data: this.generateData(labels, data),\n            finishDate: finishDate,\n            tableData: tableData\n            }\n          })\n    }\n\n      } else {\n        // show warning that TDEE is lower than intake\n      }\n\n\n  }\n\n  generateData(labels, data) {\n\n    // generate fake data for second dataset\n    const fakeGoalData = []\n    data.map(() => fakeGoalData.push(80))\n\n    return {\n      labels: labels,\n      datasets: [{\n          label: 'Weight',\n          data: data,\n          backgroundColor: [\n              'transparent'\n          ],\n          borderColor: [\n              '#FDAB18'\n          ],\n          borderWidth: 3,\n          pointRadius: 0,\n          pointHitRadius: 20,\n          cubicInterpolationMode: 'default'\n      },\n      {\n          label: 'Goal',\n          data: fakeGoalData,\n          fill: false,\n          borderColor: [\n              'rgba(255,255,255,1)'\n          ],\n          borderWidth: 1,\n          borderDash: [0],\n          borderColor: [\n              '#5A192E'\n          ],\n          pointRadius: 0,\n          pointHitRadius: 20,\n          cubicInterpolationMode: 'default'\n      }\n    ]\n    }\n  }\n\n  openCustomDialog(message) {\n    const self = this;\n    self.$f7.dialog.alert(message, \"Error\")\n  }\n\nrender() {\n  return (\n    <Page colorTheme=\"cavaliers-yellow\">\n      <Navbar colorTheme=\"cavaliers-yellow\">\n        <NavTitle>Weight loss estimator</NavTitle>\n      </Navbar>\n      <BlockTitle style={{marginLeft: \"20px\"}}>Enter your stats</BlockTitle>\n        <List inset>\n          <ListInput\n            label=\"Current weight (kg)\"\n            type=\"number\"\n            placeholder=\"105 kg\"\n            name=\"weight\"\n            onChange={this.handleChange}\n            value={this.state.weight}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Age\"\n            type=\"number\"\n            placeholder=\"29\"\n            name=\"age\"\n            onChange={this.handleChange}\n            value={this.state.age}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Height (cm)\"\n            type=\"number\"\n            placeholder=\"179\"\n            name=\"height\"\n            onChange={this.handleChange}\n            value={this.state.height}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Goal weight (kg)\"\n            type=\"number\"\n            placeholder=\"80\"\n            name=\"goal\"\n            onChange={this.handleChange}\n            value={this.state.goal}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Daily intake (kcal)\"\n            type=\"number\"\n            placeholder=\"2100\"\n            name=\"intake\"\n            onChange={this.handleChange}\n            value={this.state.intake}\n            onInputClear={this.clearInput}\n          />\n          <ListInput\n            label=\"Gender\"\n            type=\"select\"\n            defaultValue=\"1\"\n            placeholder=\"Please choose...\"\n            name=\"gender\"\n            onChange={this.handleChange}\n            value={this.state.gender}\n            >\n            <option value=\"1\">Male</option>\n            <option value=\"0\">Female</option>\n          </ListInput>\n          <ListItem title=\"Activity level\" smartSelect smartSelectParams={{closeOnSelect: true}} >\n            <select\n              name=\"activityLevel\"\n              defaultValue=\"1\"\n              onChange={this.handleChange}\n              value={this.state.activityLevel}\n\n              >\n              <option value=\"1\">Couch potato</option>\n              <option value=\"2\">Light activity</option>\n              <option value=\"3\">Moderate activity</option>\n              <option value=\"4\">Heavy activity</option>\n              <option value=\"5\">Athlete</option>\n            </select>\n          </ListItem>\n        </List>\n\n        {/*<Block strong inset>\n          <p>Click calculate to see the results.</p>\n        </Block>*/}\n\n      <Block>\n        <Row>\n          <Col>\n            <Button fill round large onClick={this.calculate}>Calculate</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button href={\"/about/\"} style={{marginTop: \"15px\"}}>About</Button>\n          </Col>\n        </Row>\n      </Block>\n\n    </Page>\n  )\n}\n\n}\n\nexport default HomePage\n","import React, { Component } from 'react';\nimport { Page, Navbar, Block, Link } from 'framework7-react';\n\nexport default class DynamicRoutePage extends Component {\n  render() {\n    return (\n      <Page>\n        <Navbar title=\"Dynamic Route\" backLink=\"Back\" />\n        <Block strong>\n          <ul>\n            <li><b>Url:</b> {this.$f7route.url}</li>\n            <li><b>Path:</b> {this.$f7route.path}</li>\n            <li><b>Hash:</b> {this.$f7route.hash}</li>\n            <li><b>Params:</b>\n              <ul>\n                {Object.keys(this.$f7route.params).map(key => (\n                  <li key={key}><b>{key}:</b> {this.$f7route.params[key]}</li>\n                ))}\n              </ul>\n            </li>\n            <li><b>Query:</b>\n              <ul>\n                {Object.keys(this.$f7route.query).map(key => (\n                  <li key={key}><b>{key}:</b> {this.$f7route.query[key]}</li>\n                ))}\n              </ul>\n            </li>\n            <li><b>Route:</b> {JSON.stringify(this.$f7route.route)}</li>\n          </ul>\n        </Block>\n        <Block strong>\n          <Link onClick={() => this.$f7router.back()}>Go back via Router API</Link>\n        </Block>\n      </Page>\n    );\n  }\n}","import React, { Component } from 'react';\nimport {Block, BlockTitle, List, ListInput, Page, Navbar, BlockHeader} from 'framework7-react'\nimport { Line } from 'react-chartjs-2';\n\nconst graphOptions = {\n  maintainAspectRatio: false, //this will make the graph use assigned size\n  scales: {\n      yAxes: [{\n          ticks: {\n              beginAtZero:false\n          },\n          gridLines: {\n            display: true,\n            color: \"#252525\",\n            drawBorder: false\n          }\n      }],\n      xAxes: [{\n          ticks: {\n              beginAtZero:false\n          },\n          gridLines: {\n            display: false,\n            color: \"#f7f7f7\",\n            drawBorder: false\n          }\n      }]\n\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false,\n    backgroundColor: '#f7f7f7',\n    titleFontColor: '#8e8e93',\n    titleFontSize: 12,\n    bodyFontColor: '#000',\n    bodyFontSize: 16,\n    displayColors: false,\n    borderColor: '#000',\n    borderWidth: 0\n  }\n}\n\nclass DataPage extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.clearInput = this.clearInput.bind(this)\n  }\n\n  handleChange(event) {\n    event.persist()\n    console.log(\"handle change\", event)\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  clearInput(event) {\n    console.log(\"clear input\", event)\n    this.setState({[event.target.name]: \"\"})\n  }\n\n  render() {\n    return (\n      <Page>\n        <Navbar title=\"Results\" backLink=\"Back\"></Navbar>\n        <Block style={{height: \"100vw\"}} id=\"chart-block\">\n        <Line\n            data={this.props.data}\n            options={graphOptions}\n          />\n      </Block>\n      {/*<Block strong inset>\n        <p>{\"You might achieve your goal weight sometime in \" + this.props.finishDate.getMonth() + \" \" + this.props.finishDate.getFullYear() + \"!\"}</p>\n      </Block>*/}\n\n      <Block>\n        <div className=\"data-table\">\n          <table>\n            <thead>\n              <tr>\n                <th className=\"label-cell\">Date</th>\n                <th className=\"numeric-cell\">Weight</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.tableData.map(set => <tr key={set.label}>\n                  <td className=\"label-cell\">{set.label}</td>\n                  <td className=\"numeric-cell\">{set.data} kg</td>\n                </tr>)\n              }\n            </tbody>\n          </table>\n        </div>\n      </Block>\n\n      </Page>\n    );\n  }\n\n}\n\nexport default DataPage;\n","import HomePage from './components/pages/HomePage';\nimport AboutPage from './components/pages/AboutPage';\nimport FormPage from './components/pages/FormPage';\nimport DynamicRoutePage from './components/pages/DynamicRoutePage';\nimport NotFoundPage from './components/pages/NotFoundPage';\nimport PanelLeftPage from './components/pages/PanelLeftPage';\nimport PanelRightPage from './components/pages/PanelRightPage';\nimport DataPage from \"./components/pages/DataPage\"\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/panel-left/',\n    component: PanelLeftPage,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n  {\n    path: '/about/',\n    component: AboutPage,\n  },\n  {\n    path: '/form/',\n    component: FormPage,\n  },\n  {\n    path: '/results/',\n    component: DataPage,\n  },\n  {\n    path: '/dynamic-route/blog/:blogId/post/:postId/',\n    component: DynamicRoutePage,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Left Panel\" />\n    <Block strong>\n      <p>Left panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block, BlockTitle, List, ListItem } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Right Panel\" />\n    <Block strong>\n      <p>Right panel content goes here</p>\n    </Block>\n    <BlockTitle>Load page in panel</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\"></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\"></ListItem>\n    </List>\n    <BlockTitle>Load page in main view</BlockTitle>\n    <List>\n      <ListItem link=\"/about/\" title=\"About\" view=\"#main-view\" panelClose></ListItem>\n      <ListItem link=\"/form/\" title=\"Form\" view=\"#main-view\" panelClose></ListItem>\n    </List>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Link, Block, BlockTitle } from 'framework7-react';\n\nexport default () => (\n  <Page colorTheme=\"cavaliers-yellow\">\n    <Navbar title=\"About\" backLink=\"Back\"></Navbar>\n    <BlockTitle>How does it work?</BlockTitle>\n    <Block strong>\n      <p>The main principle of losing weight is CICO (Calories In, Calories Out). In other words, in order to lose weight, you have to burn more calories than you intake.</p>\n      <p>This app can calculate and visualize your weight loss progress based on some parameters. The calculation itself is based on <a href=\"https://en.wikipedia.org/wiki/Harris–Benedict_equation\">Harris-Benedict equations</a> (revised by Mifflin and St. Jeor).</p>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block\n} from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Form\" backLink=\"Back\" />\n    <BlockTitle>Form Example</BlockTitle>\n    <List form>\n      <ListInput\n        label=\"Name\"\n        type=\"text\"\n        placeholder=\"Name\"\n      />\n      <ListInput\n        label=\"E-mail\"\n        type=\"email\"\n        placeholder=\"E-mail\"\n      />\n      <ListInput\n        label=\"URL\"\n        type=\"url\"\n        placeholder=\"URL\"\n      />\n      <ListInput\n        label=\"Password\"\n        type=\"password\"\n        placeholder=\"Password\"\n      />\n      <ListInput\n        label=\"Phone\"\n        type=\"tel\"\n        placeholder=\"Phone\"\n      />\n      <ListInput\n        label=\"Gender\"\n        type=\"select\"\n        defaultValue=\"Male\"\n      >\n        <option>Male</option>\n        <option>Female</option>\n      </ListInput>\n      <ListInput\n        label=\"Birth date\"\n        type=\"date\"\n        placeholder=\"Birth date\" value=\"2014-04-30\"\n      />\n      <ListItem title=\"Toggle\">\n        <Toggle slot=\"after\" />\n      </ListItem>\n      <ListInput\n        label=\"Slider\"\n        input={false}\n      >\n        <Range label={true} slot=\"input\" min={0} max={100} value={50} step={1} />\n      </ListInput>\n      <ListInput\n        label=\"Textarea\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n      />\n      <ListInput\n        label=\"Resizable\"\n        type=\"textarea\"\n        placeholder=\"Bio\"\n        resizable\n      />\n    </List>\n\n    <BlockTitle>Checkbox group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} checkbox name=\"my-checkbox\" value={n + 1} title={`Checkbox ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Radio buttons group</BlockTitle>\n    <List form>\n        {Array.from(Array(3).keys()).map(n => (\n            <ListItem key={n} radio name=\"my-radio\" defaultChecked={n === 0} value={n + 1} title={`Radio ${n + 1}`} />\n        ))}\n    </List>\n\n    <BlockTitle>Buttons</BlockTitle>\n    <Block strong>\n      <Row tag=\"p\">\n        <Button className=\"col\">Button</Button>\n        <Button className=\"col\" fill>Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" raised>Raised</Button>\n        <Button className=\"col\" raised fill>Raised Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" round>Round</Button>\n        <Button className=\"col\" round fill>Round Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" outline>Outline</Button>\n        <Button className=\"col\" round outline>Outline Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small outline>Small</Button>\n        <Button className=\"col\" small round outline>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" small fill>Small</Button>\n        <Button className=\"col\" small round fill>Small Round</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large raised>Large</Button>\n        <Button className=\"col\" large fill raised>Large Fill</Button>\n      </Row>\n      <Row tag=\"p\">\n        <Button className=\"col\" large fill raised color=\"red\">Large Red</Button>\n        <Button className=\"col\" large fill raised color=\"green\">Large Green</Button>\n      </Row>\n    </Block>\n  </Page>\n);\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","// Import React and ReactDOM\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(\n  React.createElement(App),\n  document.getElementById('app'),\n);\n","import React from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n  Popup,\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Block,\n  LoginScreen,\n  LoginScreenTitle,\n  List,\n  ListInput,\n  ListButton,\n  BlockFooter\n} from 'framework7-react';\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n  // Framework7 parameters here\n  const f7params = {\n    id: 'io.framework7.testapp', // App bundle ID\n    name: 'Framework7', // App name\n    theme: 'ios', // Automatic theme detection\n    // App routes\n    routes,\n  };\n\n  return (\n    <App params={f7params} themeDark>\n      {/* Statusbar */}\n      <Statusbar />\n\n      {/* Left Panel */}\n      <Panel left cover themeDark>\n        <View url=\"/panel-left/\" />\n      </Panel>\n\n      {/* Right Panel */}\n      <Panel right reveal themeDark>\n        <View url=\"/panel-right/\"/>\n      </Panel>\n\n      {/* Main View */}\n      <View id=\"main-view\" url=\"/\" main className=\"safe-areas\"/>\n\n      {/* Popup */}\n      <Popup id=\"popup\">\n        <View>\n          <Page>\n            <Navbar title=\"Popup\">\n              <NavRight>\n                <Link popupClose>Close</Link>\n              </NavRight>\n            </Navbar>\n            <Block>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque, architecto. Cupiditate laudantium rem nesciunt numquam, ipsam. Voluptates omnis, a inventore atque ratione aliquam. Omnis iusto nemo quos ullam obcaecati, quod.</Block>\n          </Page>\n        </View>\n      </Popup>\n\n      {/* Login Screen */}\n      <LoginScreen id=\"login-screen\">\n        <View>\n          <Page loginScreen>\n            <LoginScreenTitle>Login</LoginScreenTitle>\n            <List form>\n              <ListInput\n                label=\"Username\"\n                name=\"username\"\n                placeholder=\"Username\"\n                type=\"text\"\n              />\n              <ListInput\n                label=\"Password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n              />\n            </List>\n            <List>\n              <ListButton title=\"Sign In\" loginScreenClose></ListButton>\n              <BlockFooter>\n                <p>Click Sign In to close Login Screen</p>\n              </BlockFooter>\n            </List>\n          </Page>\n        </View>\n      </LoginScreen>\n    </App>\n  );\n};\n"],"sourceRoot":""}